digraph "compute_ideal_weights_for_decimation"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="compute_ideal_weights\l_for_decimation",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute the optimal unquantized weights for a decimation table."];
  Node1 -> Node2 [id="edge15_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="bilinear_infill_vla",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a617a8dec1d2168023a84f5c0fa1c20ca",tooltip="Functions for computing color endpoints and texel weights."];
  Node2 -> Node3 [id="edge16_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="gatherf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aae2f99eb48f3cde0f4739b894e8ca29f",tooltip="Load a vector of gathered results from an array;"];
  Node1 -> Node4 [id="edge17_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="bilinear_infill_vla_2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a84286bd889620da3be77539ddfdf3b45",tooltip="Compute the infilled weight for N texel indices in a decimated grid."];
  Node4 -> Node3 [id="edge18_Node000004_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge19_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae91c0bb0ebd82ed2a7fa7aa915f6e76e",tooltip="Return the clamped value between min and max."];
  Node5 -> Node6 [id="edge20_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node5 -> Node7 [id="edge21_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node1 -> Node3 [id="edge22_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge23_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="hmax",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a516a2f0d872381b8c7c047845a90c9a3",tooltip="Return the horizontal maximum of a vector."];
  Node1 -> Node9 [id="edge24_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="vint8::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint8.html#a2e1f0c785f4899e1b7912f2580b9f77c",tooltip="Get the scalar from a single lane."];
  Node1 -> Node10 [id="edge25_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="round_down_to_simd\l_multiple_vla",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a63b1ecd0244123ff734e6791e33bf9ca",tooltip="Round a count down to the largest multiple of the SIMD width."];
  Node1 -> Node11 [id="edge26_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="storea",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad4c0a7bde35d6fe9c54531e1e0652f4a",tooltip="Store a vector to a 16B aligned memory address."];
  Node1 -> Node12 [id="edge27_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="vfloat4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node12 -> Node13 [id="edge28_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="vfloat4::vfloat4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a9df51cb30b68d6d51ca607e64aa1ebf0",tooltip="Construct from zero-initialized value."];
}
