digraph "hadd_rgb_s"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="hadd_rgb_s",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Return the horizontal sum of RGB vector lanes as a scalar."];
  Node1 -> Node2 [id="edge92_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="compute_color_error\l_for_every_integer_count\l_and_quant_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a163a7d0cf020b6f86049745807912ec1",tooltip="For a given partition compute the error for every endpoint integer count and quant level."];
  Node2 -> Node3 [id="edge93_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compute_ideal_endpoint\l_formats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a81c7b68e8c7b82a5ff718f21bd4f3c35",tooltip="Identify, for each mode, which set of color endpoint produces the best result."];
  Node3 -> Node4 [id="edge94_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node4 -> Node5 [id="edge95_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="compress_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node5 -> Node6 [id="edge96_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="compress_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node3 -> Node11 [id="edge97_Node000003_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node11 -> Node5 [id="edge98_Node000011_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge99_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="compute_ideal_colors\l_and_weights_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a7ec20ff2556f6357cc0754c13e841262",tooltip="Compute the ideal endpoints and weights for 3 color components."];
  Node12 -> Node13 [id="edge100_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compute_ideal_colors\l_and_weights_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afa8cab65d4b6f0cbece52eec38aed523",tooltip="Compute ideal endpoint colors and weights for 1 plane of weights."];
  Node13 -> Node4 [id="edge101_Node000013_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node14 [id="edge102_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="compute_ideal_colors\l_and_weights_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a52d3985007cfc83025661e0347bc00cc",tooltip="Compute ideal endpoint colors and weights for 2 planes of weights."];
  Node14 -> Node11 [id="edge103_Node000014_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge104_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compute_ideal_colors\l_and_weights_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a08aebec57ada3441207dce6a7a02797e",tooltip="Compute the ideal endpoints and weights for 4 color components."];
  Node15 -> Node13 [id="edge105_Node000015_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge106_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="dot3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ae36c7167bc89ff2bf984c1a912526dcb",tooltip="Return the dot product for the bottom 3 lanes, returning vector."];
  Node16 -> Node17 [id="edge107_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="compute_encoding_choice\l_errors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#affc96d3eeffef962cd64307bf0b85590",tooltip="For a given set of input colors and partitioning determine endpoint encode errors."];
  Node17 -> Node3 [id="edge108_Node000017_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node18 [id="edge109_Node000016_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="compute_error_metrics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a478be461420681d7c83aa89569ea92c4",tooltip="Compute error metrics comparing two images."];
  Node18 -> Node8 [id="edge110_Node000018_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="astcenc_main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node8 -> Node9 [id="edge111_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__entry_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627",tooltip=" "];
  Node16 -> Node19 [id="edge112_Node000016_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node19 -> Node5 [id="edge113_Node000019_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge114_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="dot3_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a377cafdb98d3ee38a2999ed00504f477",tooltip="Return the dot product for the bottom 3 lanes, returning scalar."];
  Node20 -> Node2 [id="edge115_Node000020_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node12 [id="edge116_Node000020_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node19 [id="edge117_Node000020_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node21 [id="edge118_Node000020_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="recompute_ideal_colors\l_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a02bcad94240678ee727ccf2f0fbfb5d3",tooltip="For a given 1 plane weight set recompute the endpoint colors."];
  Node21 -> Node4 [id="edge119_Node000021_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node22 [id="edge120_Node000020_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="recompute_ideal_colors\l_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afb3c455470bef24f48d7815bb78bb569",tooltip="For a given 2 plane weight set recompute the endpoint colors."];
  Node22 -> Node11 [id="edge121_Node000022_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node23 [id="edge122_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="quantize_hdr_luminance\l_large_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ad5fb9a4bf5ae21916bc6c634c7f789f8",tooltip="Quantize a HDR L color using the large range encoding."];
  Node23 -> Node24 [id="edge123_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="pack_color_endpoints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ab9f9b564c57688af1f8fc1d9e000af81",tooltip="Pack a single pair of color endpoints as effectively as possible."];
  Node24 -> Node4 [id="edge124_Node000024_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node11 [id="edge125_Node000024_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge126_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="quantize_luminance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ae9901a3923b424bef4509df064efd91e",tooltip="Quantize a LDR L color."];
  Node25 -> Node24 [id="edge127_Node000025_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node26 [id="edge128_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="quantize_luminance\l_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a847eef8e87233ecad7a553dfa1dcd4d5",tooltip="Quantize a LDR LA color."];
  Node26 -> Node24 [id="edge129_Node000026_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge130_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="quantize_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#aad6197b2a3f7eb3048a81f24e5f9c7b3",tooltip="Quantize an LDR RGB color."];
  Node27 -> Node24 [id="edge131_Node000027_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node28 [id="edge132_Node000027_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="quantize_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#aa1eba2920aec0d82d8b1f66ccd3a1044",tooltip="Quantize an LDR RGBA color."];
  Node28 -> Node24 [id="edge133_Node000028_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge134_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="quantize_rgbs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a9a0a7e003d1ea68f9b48c28e406ad1ad",tooltip="Quantize an LDR RGB color using scale encoding."];
  Node29 -> Node24 [id="edge135_Node000029_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node30 [id="edge136_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="quantize_rgbs_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a2d4a8db93c0ebf03b3b6dc23b292428f",tooltip="Quantize an LDR RGBA color using scale encoding."];
  Node30 -> Node24 [id="edge137_Node000030_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge138_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge139_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge140_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="rgba_delta_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#abb9e5b31fe822e7e3ab0757f1989a321",tooltip="Unpack an LDR RGBA color that uses delta encoding."];
  Node31 -> Node24 [id="edge141_Node000031_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node32 [id="edge142_Node000031_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="rgb_delta_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#a09b179400bc4fa4d90e9b093380e5541",tooltip="Unpack an LDR RGB color that uses delta encoding."];
  Node32 -> Node33 [id="edge143_Node000032_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="unpack_color_endpoints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#ab9b659180fb522b05391892336dbc095",tooltip="Unpack a single pair of encoded endpoints."];
  Node33 -> Node34 [id="edge144_Node000033_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="astcenc_get_block_info",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a4138a9fb500526b5bfd98ea53a3ecec7",tooltip="Provide a high level summary of a block's encoding."];
  Node34 -> Node35 [id="edge145_Node000034_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="print_diagnostic_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenccli__toplevel_8cpp.html#ac1760850c83dafab500f7cf8ab789246",tooltip="Populate a single diagnostic image showing aspects of the encoding."];
  Node33 -> Node37 [id="edge146_Node000033_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="compute_symbolic_block\l_difference_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a0541138e65930f39f6caba517e76dfe4",tooltip="Compute the error between a symbolic block and the original input data."];
  Node37 -> Node4 [id="edge147_Node000037_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node38 [id="edge148_Node000033_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="compute_symbolic_block\l_difference_1plane_1partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#aff8e27acd948a9cc5631d99c80906b2f",tooltip="Compute the error between a symbolic block and the original input data."];
  Node38 -> Node4 [id="edge149_Node000038_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node39 [id="edge150_Node000033_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="compute_symbolic_block\l_difference_2plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a9c23f8373c9f5e708650b7c8e038b182",tooltip="Compute the error between a symbolic block and the original input data."];
  Node39 -> Node11 [id="edge151_Node000039_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node40 [id="edge152_Node000033_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="decompress_symbolic\l_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a4a5f09c362972951a31e4d7ff918f89f",tooltip="Decompress a symbolic block in to an image block."];
  Node40 -> Node41 [id="edge153_Node000040_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="astcenc_decompress\l_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#a062987fc41b9df7d34d8eb668f29eb21",tooltip="Decompress an image."];
  Node41 -> Node8 [id="edge154_Node000041_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node43 [id="edge155_Node000033_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="realign_weights_decimated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af80747ee43aa6fda579161376205c294",tooltip="Attempt to improve weights given a chosen configuration."];
  Node43 -> Node4 [id="edge156_Node000043_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 -> Node11 [id="edge157_Node000043_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node44 [id="edge158_Node000033_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="realign_weights_undecimated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a91e5fa530ba0e492b85132e416a5ddf4",tooltip="Attempt to improve weights given a chosen configuration."];
  Node44 -> Node4 [id="edge159_Node000044_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node11 [id="edge160_Node000044_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node33 [id="edge161_Node000031_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node45 [id="edge162_Node000001_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="rgba_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#aa8f902332b94b93405c7496b1b3838ba",tooltip="Unpack an LDR RGBA color that uses direct encoding."];
  Node45 -> Node24 [id="edge163_Node000045_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node46 [id="edge164_Node000045_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="rgb_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#ae84a3a83b3f1dbe4288ee4054ded6419",tooltip="Unpack an LDR RGB color that uses direct encoding."];
  Node46 -> Node33 [id="edge165_Node000046_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node33 [id="edge166_Node000045_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node47 [id="edge167_Node000001_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="try_quantize_hdr_luminance\l_small_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a105c509260a154870ee3d34d1a336c60",tooltip="Quantize a HDR L color using the small range encoding."];
  Node47 -> Node24 [id="edge168_Node000047_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge169_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="try_quantize_luminance\l_alpha_delta",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a54914cb063a3e14eaef9d6432ed792d6",tooltip="Try to quantize an LDR LA color using delta encoding."];
  Node48 -> Node24 [id="edge170_Node000048_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node49 [id="edge171_Node000001_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="try_quantize_rgb_blue\l_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a1a4ffac105268d9e7ac1058b1b2ad542",tooltip="Try to quantize an LDR RGB color using blue-contraction."];
  Node49 -> Node24 [id="edge172_Node000049_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node50 [id="edge173_Node000049_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="try_quantize_rgba_blue\l_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ab09b68ff45a1b287f05fd2428805bbc9",tooltip="Try to quantize an LDR RGBA color using blue-contraction."];
  Node50 -> Node24 [id="edge174_Node000050_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node51 [id="edge175_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="try_quantize_rgb_delta",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a6b7ee442b1e9da4ac693000c4f805c7b",tooltip="Try to quantize an LDR RGB color using delta encoding."];
  Node51 -> Node24 [id="edge176_Node000051_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node52 [id="edge177_Node000051_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="try_quantize_rgba_delta",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#af4d400b2fd9235d069b8e71966cb1246",tooltip="Try to quantize an LDR RGBA color using delta encoding."];
  Node52 -> Node24 [id="edge178_Node000052_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node53 [id="edge179_Node000001_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="try_quantize_rgb_delta\l_blue_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#aedceeace1416ce23b9a934ce87f96c3c",tooltip="Try to quantize an LDR RGB color using delta encoding and blue-contraction."];
  Node53 -> Node24 [id="edge180_Node000053_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node54 [id="edge181_Node000053_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="try_quantize_rgba_delta\l_blue_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a6e41c12d083ec9f3d9028ea35f13f18f",tooltip="Try to quantize an LDR RGBA color using delta and blue contract encoding."];
  Node54 -> Node24 [id="edge182_Node000054_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
