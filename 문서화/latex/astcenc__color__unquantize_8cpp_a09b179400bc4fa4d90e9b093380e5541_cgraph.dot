digraph "rgb_delta_unpack"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="rgb_delta_unpack",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Unpack an LDR RGB color that uses delta encoding."];
  Node1 -> Node2 [id="edge19_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="rgba_delta_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#abb9e5b31fe822e7e3ab0757f1989a321",tooltip="Unpack an LDR RGBA color that uses delta encoding."];
  Node2 -> Node3 [id="edge20_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="bit_transfer_signed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#acaab0374259bd298c1282e6a0b84bc8f",tooltip="Apply signed bit transfer."];
  Node3 -> Node4 [id="edge21_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="lsr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0a3a7d755cec1c73d0ce9c50b33bc207",tooltip="Logical shift right."];
  Node3 -> Node5 [id="edge22_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad922a3ed6098767968916265154b6f82",tooltip="Return a 8-bit mask code indicating mask status."];
  Node3 -> Node6 [id="edge23_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node3 -> Node7 [id="edge24_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="vint4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a9dfa1c40a3c4dbc0858567dc629a80b8",tooltip="Factory that returns a vector of zeros."];
  Node7 -> Node8 [id="edge25_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="vint4::vint4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a3315184e8bb4f0cf1ca8dcff1f57cdae",tooltip="Construct from zero-initialized value."];
  Node2 -> Node9 [id="edge26_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae91c0bb0ebd82ed2a7fa7aa915f6e76e",tooltip="Return the clamped value between min and max."];
  Node9 -> Node10 [id="edge27_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node9 -> Node11 [id="edge28_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node2 -> Node12 [id="edge29_Node000002_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="hadd_rgb_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a48e833d0cfdf950b6bc3431fce00507e",tooltip="Return the horizontal sum of RGB vector lanes as a scalar."];
  Node12 -> Node13 [id="edge30_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="vint4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a01e3f7debf73dc6c757fa36d585c9d17",tooltip="Get the scalar from a single lane."];
  Node2 -> Node14 [id="edge31_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="uncontract_color",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#a604a48c74e6d1c8476146b0955331344",tooltip="Functions for color unquantization."];
  Node14 -> Node15 [id="edge32_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="asr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aff39374b256d568d084ba4fd2fed7819",tooltip="Arithmetic shift right."];
  Node14 -> Node13 [id="edge33_Node000014_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node5 [id="edge34_Node000014_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node6 [id="edge35_Node000014_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge36_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="vint4::set_lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a1e438bb142ad09e372b0834acd0c0b68",tooltip="Set the scalar value of a single lane."];
}
