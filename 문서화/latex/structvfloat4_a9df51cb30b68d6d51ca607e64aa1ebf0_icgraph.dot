digraph "vfloat4::vfloat4"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="vfloat4::vfloat4",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Construct from zero-initialized value."];
  Node1 -> Node2 [id="edge76_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="vfloat4::lane_id",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a13edfd5bac159c8a65e10a3bd9355b4d",tooltip="Factory that returns a vector containing the lane IDs."];
  Node2 -> Node3 [id="edge77_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compute_lowest_and\l_highest_weight",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a32b24429143eb7c5b7050885943aad1b",tooltip="For a given step size compute the lowest and highest weight."];
  Node3 -> Node4 [id="edge78_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="compute_angular_endpoints\l_for_quant_levels",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__weight__align_8cpp.html#a52f057b7da5fc35adac361b3696ac963",tooltip="The main function for the angular algorithm."];
  Node1 -> Node15 [id="edge79_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="vfloat4::load1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a0e509608b3eb96b4565b5d08a3d76147",tooltip="Factory that returns a replicated scalar loaded from memory."];
  Node1 -> Node16 [id="edge80_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="vfloat4::loada",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#adb9f24117e36abce6db29dc7ac2eae83",tooltip="Factory that returns a vector loaded from 16B aligned memory."];
  Node1 -> Node17 [id="edge81_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="vfloat4::swz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a0a3e390831722cc8e54f29155699f3a5",tooltip="Return a swizzled float 2."];
  Node17 -> Node18 [id="edge82_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="compute_avgs_and_dirs\l_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a63e55f3f2ec6932357b8387f3dd82f7a",tooltip="Compute averages and dominant directions for each partition in a 2 component texture."];
  Node18 -> Node19 [id="edge83_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="compute_ideal_colors\l_and_weights_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ad96c399a873ddd142d4779b6aeb74b87",tooltip="Compute the ideal endpoints and weights for 2 color components."];
  Node19 -> Node20 [id="edge84_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="compute_ideal_colors\l_and_weights_2planes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a52d3985007cfc83025661e0347bc00cc",tooltip="Compute ideal endpoint colors and weights for 2 planes of weights."];
  Node17 -> Node21 [id="edge85_Node000017_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="compute_avgs_and_dirs\l_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a33f923c5a839af4f1d369a391183c384",tooltip="Compute averages and dominant directions for each partition in a 3 component texture."];
  Node21 -> Node22 [id="edge86_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="compute_ideal_colors\l_and_weights_3_comp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a7ec20ff2556f6357cc0754c13e841262",tooltip="Compute the ideal endpoints and weights for 3 color components."];
  Node22 -> Node20 [id="edge87_Node000022_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node24 [id="edge88_Node000017_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="compute_avgs_and_dirs\l_3_comp_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a73936e5cf41b74f2b8d9b137a9d64253",tooltip="Compute averages and dominant directions for each partition in a 3 component texture."];
  Node24 -> Node25 [id="edge89_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="compute_encoding_choice\l_errors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#affc96d3eeffef962cd64307bf0b85590",tooltip="For a given set of input colors and partitioning determine endpoint encode errors."];
  Node25 -> Node26 [id="edge90_Node000025_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="compute_ideal_endpoint\l_formats",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a81c7b68e8c7b82a5ff718f21bd4f3c35",tooltip="Identify, for each mode, which set of color endpoint produces the best result."];
  Node24 -> Node22 [id="edge91_Node000024_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node27 [id="edge92_Node000024_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node17 -> Node28 [id="edge93_Node000017_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="compute_avgs_and_dirs\l_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a00407861c2f0e767b64b1cb1bb7a27b6",tooltip="Compute averages and dominant directions for each partition in a 4 component texture."];
  Node28 -> Node29 [id="edge94_Node000028_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="compute_ideal_colors\l_and_weights_4_comp",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a08aebec57ada3441207dce6a7a02797e",tooltip="Compute the ideal endpoints and weights for 4 color components."];
  Node28 -> Node27 [id="edge95_Node000028_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node30 [id="edge96_Node000017_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="compute_color_error\l_for_every_integer_count\l_and_quant_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a163a7d0cf020b6f86049745807912ec1",tooltip="For a given partition compute the error for every endpoint integer count and quant level."];
  Node30 -> Node26 [id="edge97_Node000030_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node31 [id="edge98_Node000017_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="compute_error_metrics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a478be461420681d7c83aa89569ea92c4",tooltip="Compute error metrics comparing two images."];
  Node31 -> Node10 [id="edge99_Node000031_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="astcenc_main",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node17 -> Node19 [id="edge100_Node000017_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node22 [id="edge101_Node000017_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node32 [id="edge102_Node000017_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="compute_partition_averages_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac5429bc77cf39a7dba332af8fb14e093",tooltip="Functions for finding dominant direction of a set of colors."];
  Node32 -> Node24 [id="edge103_Node000032_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node33 [id="edge104_Node000017_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="load_image_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ac38601dc2481e26c57906255523f7262",tooltip="Load a single image block from the input image."];
  Node33 -> Node8 [id="edge105_Node000033_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="compress_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node17 -> Node34 [id="edge106_Node000017_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="load_image_block_fast_ldr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a04e3f01eb10a8a494e1d07b39c496bde",tooltip="Load a single image block from the input image."];
  Node34 -> Node8 [id="edge107_Node000034_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node35 [id="edge108_Node000017_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="quantize_hdr_rgb",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a018b17fdce9e0fb576249da80bfc90a2",tooltip="Quantize a HDR RGB color using direct RGB encoding."];
  Node17 -> Node39 [id="edge109_Node000017_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="quantize_hdr_rgbo",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a8c60d84b27b5bf6a95eafa1b86497235",tooltip="Quantize a HDR RGB color using RGB + offset."];
  Node17 -> Node40 [id="edge110_Node000017_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="recompute_ideal_colors\l_2planes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afb3c455470bef24f48d7815bb78bb569",tooltip="For a given 2 plane weight set recompute the endpoint colors."];
  Node17 -> Node41 [id="edge111_Node000017_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="try_quantize_rgb_blue\l_contract",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a1a4ffac105268d9e7ac1058b1b2ad542",tooltip="Try to quantize an LDR RGB color using blue-contraction."];
  Node17 -> Node43 [id="edge112_Node000017_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="try_quantize_rgb_delta\l_blue_contract",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#aedceeace1416ce23b9a934ce87f96c3c",tooltip="Try to quantize an LDR RGB color using delta encoding and blue-contraction."];
  Node1 -> Node45 [id="edge113_Node000001_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="vfloat4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node45 -> Node46 [id="edge114_Node000045_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="clampz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a0e6e6da0e014846b40d6eb058aea874d",tooltip="Return the clamped value between 0.0f and max."];
  Node45 -> Node47 [id="edge115_Node000045_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="clampzo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ad3120ef65de57158c7dd0a3f8a405faa",tooltip="Return the clamped value between 0.0f and 1.0f."];
  Node45 -> Node8 [id="edge116_Node000045_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node48 [id="edge117_Node000045_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="compute_angular_offsets",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a54fb7b3aab0c6f60a65ce3dd07b088da",tooltip="Compute the angular alignment factors and offsets."];
  Node48 -> Node4 [id="edge118_Node000048_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node18 [id="edge119_Node000045_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node21 [id="edge120_Node000045_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node24 [id="edge121_Node000045_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node28 [id="edge122_Node000045_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node25 [id="edge123_Node000045_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node49 [id="edge124_Node000045_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="compute_error_of_weight\l_set_1plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#aa4077e6408620eefddd42b7e159dc93c",tooltip="Compute the error of a decimated weight set for 1 plane."];
  Node45 -> Node50 [id="edge125_Node000045_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="compute_error_of_weight\l_set_2planes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a09a63c4b1e684f7ff9d88e5717b10bfb",tooltip="Compute the error of a decimated weight set for 2 planes."];
  Node45 -> Node51 [id="edge126_Node000045_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="compute_error_squared_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac4a96475fb0074ef3fd0f08ea66de75e",tooltip="Compute the RGB error for uncorrelated and same chroma projections."];
  Node51 -> Node27 [id="edge127_Node000051_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node52 [id="edge128_Node000045_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="compute_error_squared\l_rgb_single_partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a118e8a2374bfd56b522a03f938b0f367",tooltip="Functions for finding best endpoint format."];
  Node52 -> Node25 [id="edge129_Node000052_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node53 [id="edge130_Node000045_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="compute_error_squared_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a2dec702033b002eaf4090eb47ce4ad21",tooltip="Compute the RGBA error for uncorrelated and same chroma projections."];
  Node53 -> Node27 [id="edge131_Node000053_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node19 [id="edge132_Node000045_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node22 [id="edge133_Node000045_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node29 [id="edge134_Node000045_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node54 [id="edge135_Node000045_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="compute_ideal_weights\l_for_decimation",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ae1b4e922c67d5349fc849709ca08178f",tooltip="Compute the optimal unquantized weights for a decimation table."];
  Node45 -> Node3 [id="edge136_Node000045_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node55 [id="edge137_Node000045_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="compute_pixel_region\l_variance",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compute__variance_8cpp.html#a8cd8e456dcff495dba9b6666be024007",tooltip="Compute averages for a pixel region."];
  Node45 -> Node57 [id="edge138_Node000045_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="compute_symbolic_block\l_difference_1plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a0541138e65930f39f6caba517e76dfe4",tooltip="Compute the error between a symbolic block and the original input data."];
  Node45 -> Node58 [id="edge139_Node000045_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="compute_symbolic_block\l_difference_1plane_1partition",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#aff8e27acd948a9cc5631d99c80906b2f",tooltip="Compute the error between a symbolic block and the original input data."];
  Node45 -> Node59 [id="edge140_Node000045_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="compute_symbolic_block\l_difference_2plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a9c23f8373c9f5e708650b7c8e038b182",tooltip="Compute the error between a symbolic block and the original input data."];
  Node45 -> Node60 [id="edge141_Node000045_Node000060",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="decompress_symbolic\l_block",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a4a5f09c362972951a31e4d7ff918f89f",tooltip="Decompress a symbolic block in to an image block."];
  Node45 -> Node27 [id="edge142_Node000045_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node63 [id="edge143_Node000045_Node000063",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="float_to_lns",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib_8h.html#a31e34e7d35ae75fd745c6d9117d7eabb",tooltip="Convert float to 16-bit LNS."];
  Node45 -> Node65 [id="edge144_Node000045_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="haccumulate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a40fd3cc64fcafe4807ef1c7205a0c198",tooltip="Accumulate lane-wise sums for a masked vector."];
  Node45 -> Node66 [id="edge145_Node000045_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="kmeans_update",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#acf130a5dab418b762b9ad6d2db920c9f",tooltip="Compute new cluster centers based on their center of gravity."];
  Node45 -> Node33 [id="edge146_Node000045_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node34 [id="edge147_Node000045_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node68 [id="edge148_Node000045_Node000068",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node68 [id="Node000068",label="realign_weights_decimated",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af80747ee43aa6fda579161376205c294",tooltip="Attempt to improve weights given a chosen configuration."];
  Node45 -> Node69 [id="edge149_Node000045_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="recompute_ideal_colors\l_1plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a02bcad94240678ee727ccf2f0fbfb5d3",tooltip="For a given 1 plane weight set recompute the endpoint colors."];
  Node45 -> Node40 [id="edge150_Node000045_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
