digraph "vfloat4::zero"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="vfloat4::zero",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Factory that returns a vector of zeros."];
  Node1 -> Node2 [id="edge88_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="clampz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a0e6e6da0e014846b40d6eb058aea874d",tooltip="Return the clamped value between 0.0f and max."];
  Node1 -> Node3 [id="edge89_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="clampzo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ad3120ef65de57158c7dd0a3f8a405faa",tooltip="Return the clamped value between 0.0f and 1.0f."];
  Node1 -> Node4 [id="edge90_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node4 -> Node5 [id="edge91_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="astcenc_compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#ad762aa055eed75156c99309158a40e90",tooltip="Compress an image."];
  Node5 -> Node6 [id="edge92_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="astcenc_main",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node5 -> Node8 [id="edge93_Node000005_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="compression_workload\l_runner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a57bafe66bbd689a53aad2d190fe7a3fa",tooltip="Runner callback function for a compression worker thread."];
  Node8 -> Node6 [id="edge94_Node000008_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge95_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="compute_angular_offsets",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a54fb7b3aab0c6f60a65ce3dd07b088da",tooltip="Compute the angular alignment factors and offsets."];
  Node9 -> Node10 [id="edge96_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="compute_angular_endpoints\l_for_quant_levels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a52f057b7da5fc35adac361b3696ac963",tooltip="The main function for the angular algorithm."];
  Node10 -> Node11 [id="edge97_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="compute_angular_endpoints\l_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#af1b151d02c3af92eb002dc7172111233",tooltip="Compute the angular endpoints for one plane for each block mode."];
  Node11 -> Node12 [id="edge98_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node12 -> Node13 [id="edge99_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compress_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node13 -> Node4 [id="edge100_Node000013_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node14 [id="edge101_Node000010_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="compute_angular_endpoints\l_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a571d7379fd52446338ef4fa7e700cb42",tooltip="Compute the angular endpoints for two planes for each block mode."];
  Node14 -> Node15 [id="edge102_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node15 -> Node13 [id="edge103_Node000015_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge104_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="compute_avgs_and_dirs\l_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a63e55f3f2ec6932357b8387f3dd82f7a",tooltip="Compute averages and dominant directions for each partition in a 2 component texture."];
  Node16 -> Node17 [id="edge105_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="compute_ideal_colors\l_and_weights_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ad96c399a873ddd142d4779b6aeb74b87",tooltip="Compute the ideal endpoints and weights for 2 color components."];
  Node17 -> Node18 [id="edge106_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="compute_ideal_colors\l_and_weights_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a52d3985007cfc83025661e0347bc00cc",tooltip="Compute ideal endpoint colors and weights for 2 planes of weights."];
  Node18 -> Node15 [id="edge107_Node000018_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node19 [id="edge108_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="compute_avgs_and_dirs\l_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a33f923c5a839af4f1d369a391183c384",tooltip="Compute averages and dominant directions for each partition in a 3 component texture."];
  Node19 -> Node20 [id="edge109_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="compute_ideal_colors\l_and_weights_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a7ec20ff2556f6357cc0754c13e841262",tooltip="Compute the ideal endpoints and weights for 3 color components."];
  Node20 -> Node21 [id="edge110_Node000020_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="compute_ideal_colors\l_and_weights_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afa8cab65d4b6f0cbece52eec38aed523",tooltip="Compute ideal endpoint colors and weights for 1 plane of weights."];
  Node21 -> Node12 [id="edge111_Node000021_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node18 [id="edge112_Node000020_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge113_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="compute_avgs_and_dirs\l_3_comp_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a73936e5cf41b74f2b8d9b137a9d64253",tooltip="Compute averages and dominant directions for each partition in a 3 component texture."];
  Node22 -> Node23 [id="edge114_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="compute_encoding_choice\l_errors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#affc96d3eeffef962cd64307bf0b85590",tooltip="For a given set of input colors and partitioning determine endpoint encode errors."];
  Node23 -> Node24 [id="edge115_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="compute_ideal_endpoint\l_formats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a81c7b68e8c7b82a5ff718f21bd4f3c35",tooltip="Identify, for each mode, which set of color endpoint produces the best result."];
  Node24 -> Node12 [id="edge116_Node000024_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node15 [id="edge117_Node000024_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node20 [id="edge118_Node000022_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node25 [id="edge119_Node000022_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node25 -> Node13 [id="edge120_Node000025_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node26 [id="edge121_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="compute_avgs_and_dirs\l_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a00407861c2f0e767b64b1cb1bb7a27b6",tooltip="Compute averages and dominant directions for each partition in a 4 component texture."];
  Node26 -> Node27 [id="edge122_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="compute_ideal_colors\l_and_weights_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a08aebec57ada3441207dce6a7a02797e",tooltip="Compute the ideal endpoints and weights for 4 color components."];
  Node27 -> Node21 [id="edge123_Node000027_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node25 [id="edge124_Node000026_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node23 [id="edge125_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node28 [id="edge126_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="compute_error_of_weight\l_set_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#aa4077e6408620eefddd42b7e159dc93c",tooltip="Compute the error of a decimated weight set for 1 plane."];
  Node28 -> Node12 [id="edge127_Node000028_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge128_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="compute_error_of_weight\l_set_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a09a63c4b1e684f7ff9d88e5717b10bfb",tooltip="Compute the error of a decimated weight set for 2 planes."];
  Node29 -> Node15 [id="edge129_Node000029_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge130_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="compute_error_squared_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac4a96475fb0074ef3fd0f08ea66de75e",tooltip="Compute the RGB error for uncorrelated and same chroma projections."];
  Node30 -> Node25 [id="edge131_Node000030_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge132_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="compute_error_squared\l_rgb_single_partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a118e8a2374bfd56b522a03f938b0f367",tooltip="Functions for finding best endpoint format."];
  Node31 -> Node23 [id="edge133_Node000031_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node32 [id="edge134_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="compute_error_squared_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a2dec702033b002eaf4090eb47ce4ad21",tooltip="Compute the RGBA error for uncorrelated and same chroma projections."];
  Node32 -> Node25 [id="edge135_Node000032_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge136_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge137_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge138_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node33 [id="edge139_Node000001_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="compute_ideal_weights\l_for_decimation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ae1b4e922c67d5349fc849709ca08178f",tooltip="Compute the optimal unquantized weights for a decimation table."];
  Node33 -> Node12 [id="edge140_Node000033_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node15 [id="edge141_Node000033_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node34 [id="edge142_Node000001_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="compute_lowest_and\l_highest_weight",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a32b24429143eb7c5b7050885943aad1b",tooltip="For a given step size compute the lowest and highest weight."];
  Node34 -> Node10 [id="edge143_Node000034_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node35 [id="edge144_Node000001_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="compute_pixel_region\l_variance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compute__variance_8cpp.html#a8cd8e456dcff495dba9b6666be024007",tooltip="Compute averages for a pixel region."];
  Node35 -> Node36 [id="edge145_Node000035_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#abb4b489d57171cfb1ebe0be7d24ef1d9",tooltip="Compute regional averages in an image."];
  Node36 -> Node5 [id="edge146_Node000036_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node37 [id="edge147_Node000001_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="compute_symbolic_block\l_difference_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a0541138e65930f39f6caba517e76dfe4",tooltip="Compute the error between a symbolic block and the original input data."];
  Node37 -> Node12 [id="edge148_Node000037_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node38 [id="edge149_Node000001_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="compute_symbolic_block\l_difference_1plane_1partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#aff8e27acd948a9cc5631d99c80906b2f",tooltip="Compute the error between a symbolic block and the original input data."];
  Node38 -> Node12 [id="edge150_Node000038_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node39 [id="edge151_Node000001_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="compute_symbolic_block\l_difference_2plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a9c23f8373c9f5e708650b7c8e038b182",tooltip="Compute the error between a symbolic block and the original input data."];
  Node39 -> Node15 [id="edge152_Node000039_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node40 [id="edge153_Node000001_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="decompress_symbolic\l_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a4a5f09c362972951a31e4d7ff918f89f",tooltip="Decompress a symbolic block in to an image block."];
  Node40 -> Node41 [id="edge154_Node000040_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="astcenc_decompress\l_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#a062987fc41b9df7d34d8eb668f29eb21",tooltip="Decompress an image."];
  Node41 -> Node6 [id="edge155_Node000041_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge156_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node43 [id="edge157_Node000001_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="float_to_lns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a31e34e7d35ae75fd745c6d9117d7eabb",tooltip="Convert float to 16-bit LNS."];
  Node43 -> Node44 [id="edge158_Node000043_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="encode_texel_lns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ab1928a8877d97e7fca94c20dff6d3326",tooltip="Encode a texel that includes at least some HDR LNS texels."];
  Node44 -> Node45 [id="edge159_Node000044_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="load_image_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ac38601dc2481e26c57906255523f7262",tooltip="Load a single image block from the input image."];
  Node45 -> Node4 [id="edge160_Node000045_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node46 [id="edge161_Node000001_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="haccumulate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a40fd3cc64fcafe4807ef1c7205a0c198",tooltip="Accumulate lane-wise sums for a masked vector."];
  Node1 -> Node47 [id="edge162_Node000001_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="kmeans_update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#acf130a5dab418b762b9ad6d2db920c9f",tooltip="Compute new cluster centers based on their center of gravity."];
  Node47 -> Node48 [id="edge163_Node000047_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="compute_kmeans_partition\l_ordering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a89e88da4b6a389046d10b859ba68a118",tooltip="Use k-means clustering to compute a partition ordering for a block.."];
  Node48 -> Node25 [id="edge164_Node000048_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node45 [id="edge165_Node000001_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node49 [id="edge166_Node000001_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="load_image_block_fast_ldr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a04e3f01eb10a8a494e1d07b39c496bde",tooltip="Load a single image block from the input image."];
  Node49 -> Node4 [id="edge167_Node000049_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node50 [id="edge168_Node000001_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="realign_weights_decimated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af80747ee43aa6fda579161376205c294",tooltip="Attempt to improve weights given a chosen configuration."];
  Node50 -> Node12 [id="edge169_Node000050_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node15 [id="edge170_Node000050_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node51 [id="edge171_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="recompute_ideal_colors\l_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a02bcad94240678ee727ccf2f0fbfb5d3",tooltip="For a given 1 plane weight set recompute the endpoint colors."];
  Node51 -> Node12 [id="edge172_Node000051_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node52 [id="edge173_Node000001_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="recompute_ideal_colors\l_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afb3c455470bef24f48d7815bb78bb569",tooltip="For a given 2 plane weight set recompute the endpoint colors."];
  Node52 -> Node15 [id="edge174_Node000052_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
