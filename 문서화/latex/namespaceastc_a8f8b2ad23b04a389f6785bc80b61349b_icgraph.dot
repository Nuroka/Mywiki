digraph "astc::clamp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="astc::clamp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Clamp a value value between mn and mx."];
  Node1 -> Node2 [id="edge83_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="astc::clamp1f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#ac60307af42a98d70a956170894e29e9e",tooltip="Clamp a float value between 0.0f and 1.0f."];
  Node2 -> Node3 [id="edge84_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compute_ideal_colors\l_and_weights_1_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a3e9812129972c73914841ecc0f6a7e71",tooltip="Compute the ideal endpoints and weights for 1 color component."];
  Node3 -> Node4 [id="edge85_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="compute_ideal_colors\l_and_weights_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a52d3985007cfc83025661e0347bc00cc",tooltip="Compute ideal endpoint colors and weights for 2 planes of weights."];
  Node4 -> Node5 [id="edge86_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node5 -> Node6 [id="edge87_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="compress_block",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node2 -> Node12 [id="edge88_Node000002_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="compute_ideal_colors\l_and_weights_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ad96c399a873ddd142d4779b6aeb74b87",tooltip="Compute the ideal endpoints and weights for 2 color components."];
  Node12 -> Node4 [id="edge89_Node000012_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node13 [id="edge90_Node000002_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compute_ideal_colors\l_and_weights_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a7ec20ff2556f6357cc0754c13e841262",tooltip="Compute the ideal endpoints and weights for 3 color components."];
  Node13 -> Node14 [id="edge91_Node000013_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="compute_ideal_colors\l_and_weights_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afa8cab65d4b6f0cbece52eec38aed523",tooltip="Compute ideal endpoint colors and weights for 1 plane of weights."];
  Node14 -> Node15 [id="edge92_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node15 -> Node6 [id="edge93_Node000015_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node4 [id="edge94_Node000013_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge95_Node000002_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="compute_ideal_colors\l_and_weights_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a08aebec57ada3441207dce6a7a02797e",tooltip="Compute the ideal endpoints and weights for 4 color components."];
  Node16 -> Node14 [id="edge96_Node000016_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node17 [id="edge97_Node000002_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="quantize_rgbs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a9a0a7e003d1ea68f9b48c28e406ad1ad",tooltip="Quantize an LDR RGB color using scale encoding."];
  Node17 -> Node18 [id="edge98_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="pack_color_endpoints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ab9f9b564c57688af1f8fc1d9e000af81",tooltip="Pack a single pair of color endpoints as effectively as possible."];
  Node18 -> Node15 [id="edge99_Node000018_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node5 [id="edge100_Node000018_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge101_Node000017_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="quantize_rgbs_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a2d4a8db93c0ebf03b3b6dc23b292428f",tooltip="Quantize an LDR RGBA color using scale encoding."];
  Node19 -> Node18 [id="edge102_Node000019_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node20 [id="edge103_Node000002_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="recompute_ideal_colors\l_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a02bcad94240678ee727ccf2f0fbfb5d3",tooltip="For a given 1 plane weight set recompute the endpoint colors."];
  Node20 -> Node15 [id="edge104_Node000020_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node21 [id="edge105_Node000002_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="recompute_ideal_colors\l_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afb3c455470bef24f48d7815bb78bb569",tooltip="For a given 2 plane weight set recompute the endpoint colors."];
  Node21 -> Node5 [id="edge106_Node000021_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node22 [id="edge107_Node000002_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="unorm8x4_array_from\l_astc_img",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__image_8cpp.html#a9706acc840e996830702a831d846559c",tooltip="Create a flattened RGBA UNORM8 data array from an image structure."];
  Node1 -> Node23 [id="edge108_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="astc::clamp255f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a1861708487807ec08c172e2f7ff58978",tooltip="Clamp a float value between 0.0f and 255.0f."];
  Node23 -> Node24 [id="edge109_Node000023_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="quantize_hdr_rgb_ldr\l_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#acc5fc16efff8422faf77e47bc55ab0ad",tooltip="Quantize a HDR RGB + LDR A color using direct RGBA encoding."];
  Node24 -> Node18 [id="edge110_Node000024_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node17 [id="edge111_Node000023_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge112_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="compute_pixel_region\l_variance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compute__variance_8cpp.html#a8cd8e456dcff495dba9b6666be024007",tooltip="Compute averages for a pixel region."];
  Node25 -> Node26 [id="edge113_Node000025_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#abb4b489d57171cfb1ebe0be7d24ef1d9",tooltip="Compute regional averages in an image."];
  Node26 -> Node8 [id="edge114_Node000026_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="astcenc_compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#ad762aa055eed75156c99309158a40e90",tooltip="Compress an image."];
  Node8 -> Node9 [id="edge115_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="astcenc_main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node9 -> Node10 [id="edge116_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__entry_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627",tooltip=" "];
  Node8 -> Node11 [id="edge117_Node000008_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="compression_workload\l_runner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a57bafe66bbd689a53aad2d190fe7a3fa",tooltip="Runner callback function for a compression worker thread."];
  Node11 -> Node9 [id="edge118_Node000011_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge119_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="hdr_rgb_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#ade2461b695d17d056a56c091736a9cc9",tooltip="Unpack an HDR RGB direct encoding."];
  Node27 -> Node28 [id="edge120_Node000027_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="hdr_rgb_hdr_alpha_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#aded0cdfa2613a96d69299785784bfa7e",tooltip="Unpack an HDR RGBA direct encoding."];
  Node28 -> Node29 [id="edge121_Node000028_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="unpack_color_endpoints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#ab9b659180fb522b05391892336dbc095",tooltip="Unpack a single pair of encoded endpoints."];
  Node29 -> Node30 [id="edge122_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="astcenc_get_block_info",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a4138a9fb500526b5bfd98ea53a3ecec7",tooltip="Provide a high level summary of a block's encoding."];
  Node30 -> Node31 [id="edge123_Node000030_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="print_diagnostic_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenccli__toplevel_8cpp.html#ac1760850c83dafab500f7cf8ab789246",tooltip="Populate a single diagnostic image showing aspects of the encoding."];
  Node29 -> Node33 [id="edge124_Node000029_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="compute_symbolic_block\l_difference_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a0541138e65930f39f6caba517e76dfe4",tooltip="Compute the error between a symbolic block and the original input data."];
  Node33 -> Node15 [id="edge125_Node000033_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node34 [id="edge126_Node000029_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="compute_symbolic_block\l_difference_1plane_1partition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#aff8e27acd948a9cc5631d99c80906b2f",tooltip="Compute the error between a symbolic block and the original input data."];
  Node34 -> Node15 [id="edge127_Node000034_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node35 [id="edge128_Node000029_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="compute_symbolic_block\l_difference_2plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a9c23f8373c9f5e708650b7c8e038b182",tooltip="Compute the error between a symbolic block and the original input data."];
  Node35 -> Node5 [id="edge129_Node000035_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node36 [id="edge130_Node000029_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="decompress_symbolic\l_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__decompress__symbolic_8cpp.html#a4a5f09c362972951a31e4d7ff918f89f",tooltip="Decompress a symbolic block in to an image block."];
  Node36 -> Node37 [id="edge131_Node000036_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="astcenc_decompress\l_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#a062987fc41b9df7d34d8eb668f29eb21",tooltip="Decompress an image."];
  Node37 -> Node9 [id="edge132_Node000037_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node39 [id="edge133_Node000029_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="realign_weights_decimated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af80747ee43aa6fda579161376205c294",tooltip="Attempt to improve weights given a chosen configuration."];
  Node39 -> Node15 [id="edge134_Node000039_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node5 [id="edge135_Node000039_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node40 [id="edge136_Node000029_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="realign_weights_undecimated",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a91e5fa530ba0e492b85132e416a5ddf4",tooltip="Attempt to improve weights given a chosen configuration."];
  Node40 -> Node15 [id="edge137_Node000040_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node5 [id="edge138_Node000040_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node41 [id="edge139_Node000027_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="hdr_rgb_ldr_alpha_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#aa7a2e2f7b578cb97b5ade543c8db2614",tooltip="Unpack an HDR RGB + LDR A direct encoding."];
  Node41 -> Node29 [id="edge140_Node000041_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node29 [id="edge141_Node000027_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node42 [id="edge142_Node000001_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="luminance_alpha_delta\l_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#a3b8032ce212a167d91be041c0226cb3a",tooltip="Unpack an LDR LA color that uses delta encoding."];
  Node42 -> Node29 [id="edge143_Node000042_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node43 [id="edge144_Node000001_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="mpsnr_operator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a4504544fb13100fa0507716d5c7708c8",tooltip="mPSNR tone-mapping operator for HDR images."];
  Node43 -> Node44 [id="edge145_Node000043_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="mpsnr_sumdiff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a9e0a98a390f6b1399d67fe4005866da8",tooltip="mPSNR difference between two values."];
  Node44 -> Node45 [id="edge146_Node000044_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="compute_error_metrics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a478be461420681d7c83aa89569ea92c4",tooltip="Compute error metrics comparing two images."];
  Node45 -> Node9 [id="edge147_Node000045_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node46 [id="edge148_Node000001_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="quantize_hdr_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a4c475fce8f14e7437cc348b0319a1365",tooltip="Quantize a HDR A color using either delta or direct RGBA encoding."];
  Node46 -> Node47 [id="edge149_Node000046_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="quantize_hdr_rgb_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a968dafc89b796ea5218a690b22c39911",tooltip="Quantize a HDR RGBA color using either delta or direct RGBA encoding."];
  Node47 -> Node18 [id="edge150_Node000047_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge151_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="quantize_hdr_luminance\l_large_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ad5fb9a4bf5ae21916bc6c634c7f789f8",tooltip="Quantize a HDR L color using the large range encoding."];
  Node48 -> Node18 [id="edge152_Node000048_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node49 [id="edge153_Node000001_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="quantize_hdr_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a018b17fdce9e0fb576249da80bfc90a2",tooltip="Quantize a HDR RGB color using direct RGB encoding."];
  Node49 -> Node18 [id="edge154_Node000049_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node47 [id="edge155_Node000049_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node24 [id="edge156_Node000049_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node50 [id="edge157_Node000001_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="quantize_hdr_rgbo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a8c60d84b27b5bf6a95eafa1b86497235",tooltip="Quantize a HDR RGB color using RGB + offset."];
  Node50 -> Node18 [id="edge158_Node000050_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge159_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node51 [id="edge160_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="try_quantize_hdr_luminance\l_small_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a105c509260a154870ee3d34d1a336c60",tooltip="Quantize a HDR L color using the small range encoding."];
  Node51 -> Node18 [id="edge161_Node000051_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node52 [id="edge162_Node000001_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="validate_config",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a58d9fd22e35089649b73eed6af336aeb",tooltip=" "];
  Node52 -> Node53 [id="edge163_Node000052_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="astcenc_context_alloc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a823234313a697f5b4cdbd2cd6caaef4a",tooltip="Allocate a new codec context based on a config."];
  Node53 -> Node9 [id="edge164_Node000053_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
