digraph "load_image_block"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="load_image_block",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Load a single image block from the input image."];
  Node1 -> Node2 [id="edge45_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="all",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad93dff3341cbbeed568d4bd6dc4ef87c",tooltip="True if all lanes are enabled, false otherwise."];
  Node2 -> Node3 [id="edge46_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad922a3ed6098767968916265154b6f82",tooltip="Return a 8-bit mask code indicating mask status."];
  Node1 -> Node4 [id="edge47_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="any",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a1fcb81537a701f246e75fa622c2dd8ee",tooltip="True if any lanes are enabled, false otherwise."];
  Node4 -> Node3 [id="edge48_Node000004_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge49_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="encode_texel_lns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ab1928a8877d97e7fca94c20dff6d3326",tooltip="Encode a texel that includes at least some HDR LNS texels."];
  Node5 -> Node6 [id="edge50_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="float_to_lns",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a31e34e7d35ae75fd745c6d9117d7eabb",tooltip="Convert float to 16-bit LNS."];
  Node6 -> Node7 [id="edge51_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="frexp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#ad68d7d1254a8a61d504c089db0418fe3",tooltip="Extract mantissa and exponent of a float value."];
  Node7 -> Node8 [id="edge52_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="float_as_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5c2db475754d8da42d9b685a45c48ab8",tooltip="Return a float value as an integer bit pattern (i.e. no conversion)."];
  Node7 -> Node9 [id="edge53_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="int_as_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ac584d4929db078403c58549bafd3c1cd",tooltip="Return a integer value as a float bit pattern (i.e. no conversion)."];
  Node7 -> Node10 [id="edge54_Node000007_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="lsr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0a3a7d755cec1c73d0ce9c50b33bc207",tooltip="Logical shift right."];
  Node6 -> Node11 [id="edge55_Node000006_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="int_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a3a2ce0fb403294db7fe126a6b3e87ab7",tooltip="Return a float value for an integer vector."];
  Node6 -> Node12 [id="edge56_Node000006_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node6 -> Node13 [id="edge57_Node000006_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="vfloat4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node13 -> Node14 [id="edge58_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="vfloat4::vfloat4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a9df51cb30b68d6d51ca607e64aa1ebf0",tooltip="Construct from zero-initialized value."];
  Node6 -> Node15 [id="edge59_Node000006_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="vint4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a9dfa1c40a3c4dbc0858567dc629a80b8",tooltip="Factory that returns a vector of zeros."];
  Node15 -> Node16 [id="edge60_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="vint4::vint4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a3315184e8bb4f0cf1ca8dcff1f57cdae",tooltip="Construct from zero-initialized value."];
  Node5 -> Node12 [id="edge61_Node000005_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge62_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="encode_texel_unorm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a94c9a0ba5f46a781280e3d102b1c9179",tooltip="Encode a texel that is entirely LDR linear."];
  Node1 -> Node18 [id="edge63_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="float16_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__neon__4_8h.html#afd7aa2069bdf377067c3abaca1256432",tooltip="Return a float value for a float16 vector."];
  Node1 -> Node19 [id="edge64_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="float_to_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#afdaab5e0b4a39a5dd28fb5b40642e57d",tooltip="Return a integer value for a float vector, using truncation."];
  Node1 -> Node20 [id="edge65_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="vfloat4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04462a7815432c6bc3ce1b5e5d11e4fc",tooltip="Get the scalar value of a single lane."];
  Node1 -> Node21 [id="edge66_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="lns_to_sf16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#aa1ab2044e5354115ee71324e30fba1ed",tooltip="Convert 16-bit LNS to float16."];
  Node21 -> Node22 [id="edge67_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="lsl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a86240f0fb5745ded88afe10d524c960f",tooltip="Logical shift left."];
  Node21 -> Node10 [id="edge68_Node000021_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node23 [id="edge69_Node000021_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node21 -> Node12 [id="edge70_Node000021_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge71_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="load_texel_f16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ad2ea4a92f4b88093986f54423a11d6a5",tooltip="Load a 16-bit fp16 texel from a data array."];
  Node24 -> Node18 [id="edge72_Node000024_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge73_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="load_texel_f32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a8d442e093c3f3dc33123fa3ecbe6dece",tooltip="Load a 32-bit float texel from a data array."];
  Node1 -> Node26 [id="edge74_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="load_texel_u8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a3308fe6e3772f49620b4b20258e7a28c",tooltip="Load a 8-bit UNORM texel from a data array."];
  Node26 -> Node11 [id="edge75_Node000026_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge76_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node1 -> Node28 [id="edge77_Node000001_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="astc::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#af78c0d31374aa9923633a3a2abf8d738",tooltip="Return the minimum of two values."];
  Node1 -> Node23 [id="edge78_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge79_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge80_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="vfloat4::swz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a0a3e390831722cc8e54f29155699f3a5",tooltip="Return a swizzled float 2."];
  Node29 -> Node20 [id="edge81_Node000029_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node14 [id="edge82_Node000029_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge83_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="swz_texel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ae572e9ecb56b0cc2f5eba2a767010c33",tooltip="Swizzle a texel into a new arrangement."];
  Node30 -> Node31 [id="edge84_Node000030_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="storea",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad4c0a7bde35d6fe9c54531e1e0652f4a",tooltip="Store a vector to a 16B aligned memory address."];
  Node1 -> Node32 [id="edge85_Node000001_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="swz_texel_skip",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a358236c706b6ba8cf35879bfdf56ab67",tooltip="Dummy no-op swizzle function."];
  Node1 -> Node33 [id="edge86_Node000001_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="image_block::texel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structimage__block.html#af99de7d75e1e380b31d70d131509caa9",tooltip="Get an RGBA texel value from the data."];
  Node1 -> Node13 [id="edge87_Node000001_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge88_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
}
