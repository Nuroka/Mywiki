digraph "compression_workload_runner"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="compression_workload\l_runner",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Runner callback function for a compression worker thread."];
  Node1 -> Node2 [id="edge95_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="astcenc_compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#ad762aa055eed75156c99309158a40e90",tooltip="Compress an image."];
  Node2 -> Node3 [id="edge96_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="astcenc_compress_reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a72c515300f4a4cf56c7bb41247960d72",tooltip="Reset the codec state for a new compression."];
  Node3 -> Node4 [id="edge97_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ParallelManager::reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#a9dfbf8571d608ce0d4196ac32184eea5",tooltip="Reset the tracker for a new processing batch."];
  Node2 -> Node5 [id="edge98_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node5 -> Node6 [id="edge99_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="ParallelManager::complete\l_task_assignment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#a5236e474ddffa7f805e425f1dc660d1c",tooltip="Complete a task assignment."];
  Node5 -> Node7 [id="edge100_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="compress_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node7 -> Node8 [id="edge101_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="all",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad93dff3341cbbeed568d4bd6dc4ef87c",tooltip="True if all lanes are enabled, false otherwise."];
  Node7 -> Node10 [id="edge102_Node000007_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae91c0bb0ebd82ed2a7fa7aa915f6e76e",tooltip="Return the clamped value between min and max."];
  Node10 -> Node11 [id="edge103_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node10 -> Node12 [id="edge104_Node000010_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node7 -> Node13 [id="edge105_Node000007_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node13 -> Node141 [id="edge106_Node000013_Node000141",color="steelblue1",style="solid",tooltip=" "];
  Node141 [id="Node000141",label="block_mode::get_weight\l_quant_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structblock__mode.html#a760578093fb16da4932bc26d2d5c1837",tooltip="Get the weight quantization used by this block mode."];
  Node13 -> Node60 [id="edge107_Node000013_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="astc::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#af78c0d31374aa9923633a3a2abf8d738",tooltip="Return the minimum of two values."];
  Node13 -> Node23 [id="edge108_Node000013_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node7 -> Node179 [id="edge109_Node000007_Node000179",color="steelblue1",style="solid",tooltip=" "];
  Node179 [id="Node000179",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node179 -> Node141 [id="edge110_Node000179_Node000141",color="steelblue1",style="solid",tooltip=" "];
  Node179 -> Node60 [id="edge111_Node000179_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node179 -> Node23 [id="edge112_Node000179_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node191 [id="edge113_Node000007_Node000191",color="steelblue1",style="solid",tooltip=" "];
  Node191 [id="Node000191",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node191 -> Node70 [id="edge114_Node000191_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="image_block::is_constant\l_channel",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structimage__block.html#ae3c0735355d378591db6cb7a011e381a",tooltip="Test if a single color channel is constant across the block."];
  Node70 -> Node71 [id="edge115_Node000070_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="any",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a1fcb81537a701f246e75fa622c2dd8ee",tooltip="True if any lanes are enabled, false otherwise."];
  Node191 -> Node60 [id="edge116_Node000191_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node191 -> Node26 [id="edge117_Node000191_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="vfloat4::zero",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node7 -> Node206 [id="edge118_Node000007_Node000206",color="steelblue1",style="solid",tooltip=" "];
  Node206 [id="Node000206",label="float_to_float16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__neon__4_8h.html#ae8701a3f44d7b99016d54c3d6ee27581",tooltip="Return a float16 value for a float vector, using round-to-nearest."];
  Node7 -> Node159 [id="edge119_Node000007_Node000159",color="steelblue1",style="solid",tooltip=" "];
  Node159 [id="Node000159",label="float_to_int_rtn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a598d6ea3ba27a788b12341a5263c7881",tooltip="Return a integer value for a float vector, using round-to-nearest."];
  Node7 -> Node105 [id="edge120_Node000007_Node000105",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="block_size_descriptor\l::get_block_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structblock__size__descriptor.html#a13608eb55e48c96b6243f4830278ebf3",tooltip="Get the block mode structure for index block_mode."];
  Node7 -> Node141 [id="edge121_Node000007_Node000141",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node41 [id="edge122_Node000007_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="hadd_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aacd26478e4fe1f97a5d47e8adaacc898",tooltip="Return the horizontal sum of a vector."];
  Node41 -> Node41 [id="edge123_Node000041_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node70 [id="edge124_Node000007_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node85 [id="edge125_Node000007_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="image_block::is_luminance",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structimage__block.html#ac3e154e58086017c6e405b8cc7e52c9f",tooltip="Test if this block is a luminance block with constant 1.0 alpha."];
  Node85 -> Node32 [id="edge126_Node000085_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="vfloat4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04462a7815432c6bc3ce1b5e5d11e4fc",tooltip="Get the scalar value of a single lane."];
  Node7 -> Node207 [id="edge127_Node000007_Node000207",color="steelblue1",style="solid",tooltip=" "];
  Node207 [id="Node000207",label="image_block::is_luminancealpha",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structimage__block.html#aa7f3d29c2f755e47a887d090c5997880",tooltip="Test if this block is a luminance block with variable alpha."];
  Node207 -> Node32 [id="edge128_Node000207_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node60 [id="edge129_Node000007_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node208 [id="edge130_Node000007_Node000208",color="steelblue1",style="solid",tooltip=" "];
  Node208 [id="Node000208",label="prepare_block_statistics",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a6ac5bc5977155d0c8433492cd1985ce6",tooltip="Determine the lowest cross-channel correlation factor."];
  Node208 -> Node41 [id="edge131_Node000208_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node208 -> Node32 [id="edge132_Node000208_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node208 -> Node60 [id="edge133_Node000208_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node136 [id="edge134_Node000007_Node000136",color="steelblue1",style="solid",tooltip=" "];
  Node136 [id="Node000136",label="store",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a61add2970baac5cf6b04177472ae1ed1",tooltip="Store a vector to an unaligned memory address."];
  Node7 -> Node210 [id="edge135_Node000007_Node000210",color="steelblue1",style="solid",tooltip=" "];
  Node210 [id="Node000210",label="symbolic_to_physical",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__symbolic__physical_8cpp.html#af7b1f1696c0ee5cbfd6f2546fa400011",tooltip="Convert a symbolic representation into a binary physical encoding."];
  Node210 -> Node105 [id="edge136_Node000210_Node000105",color="steelblue1",style="solid",tooltip=" "];
  Node210 -> Node60 [id="edge137_Node000210_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node217 [id="edge138_Node000005_Node000217",color="steelblue1",style="solid",tooltip=" "];
  Node217 [id="Node000217",label="ParallelManager::get\l_task_assignment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#ae0bb955f3fa52427590633355f0da01c",tooltip="Request a task assignment."];
  Node217 -> Node60 [id="edge139_Node000217_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node218 [id="edge140_Node000005_Node000218",color="steelblue1",style="solid",tooltip=" "];
  Node218 [id="Node000218",label="ParallelManager::init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#af5c7b0a9139c6f1709ead3f135f0a861",tooltip="Trigger the pipeline stage init step."];
  Node5 -> Node32 [id="edge141_Node000005_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node219 [id="edge142_Node000005_Node000219",color="steelblue1",style="solid",tooltip=" "];
  Node219 [id="Node000219",label="load_image_block",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__image_8cpp.html#ac38601dc2481e26c57906255523f7262",tooltip="Load a single image block from the input image."];
  Node219 -> Node8 [id="edge143_Node000219_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node71 [id="edge144_Node000219_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node220 [id="edge145_Node000219_Node000220",color="steelblue1",style="solid",tooltip=" "];
  Node220 [id="Node000220",label="encode_texel_lns",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__image_8cpp.html#ab1928a8877d97e7fca94c20dff6d3326",tooltip="Encode a texel that includes at least some HDR LNS texels."];
  Node220 -> Node23 [id="edge146_Node000220_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node223 [id="edge147_Node000219_Node000223",color="steelblue1",style="solid",tooltip=" "];
  Node223 [id="Node000223",label="encode_texel_unorm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a94c9a0ba5f46a781280e3d102b1c9179",tooltip="Encode a texel that is entirely LDR linear."];
  Node219 -> Node224 [id="edge148_Node000219_Node000224",color="steelblue1",style="solid",tooltip=" "];
  Node224 [id="Node000224",label="float16_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__neon__4_8h.html#afd7aa2069bdf377067c3abaca1256432",tooltip="Return a float value for a float16 vector."];
  Node219 -> Node29 [id="edge149_Node000219_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="float_to_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#afdaab5e0b4a39a5dd28fb5b40642e57d",tooltip="Return a integer value for a float vector, using truncation."];
  Node219 -> Node32 [id="edge150_Node000219_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node225 [id="edge151_Node000219_Node000225",color="steelblue1",style="solid",tooltip=" "];
  Node225 [id="Node000225",label="lns_to_sf16",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib_8h.html#aa1ab2044e5354115ee71324e30fba1ed",tooltip="Convert 16-bit LNS to float16."];
  Node225 -> Node12 [id="edge152_Node000225_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node225 -> Node23 [id="edge153_Node000225_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node226 [id="edge154_Node000219_Node000226",color="steelblue1",style="solid",tooltip=" "];
  Node226 [id="Node000226",label="load_texel_f16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ad2ea4a92f4b88093986f54423a11d6a5",tooltip="Load a 16-bit fp16 texel from a data array."];
  Node226 -> Node224 [id="edge155_Node000226_Node000224",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node227 [id="edge156_Node000219_Node000227",color="steelblue1",style="solid",tooltip=" "];
  Node227 [id="Node000227",label="load_texel_f32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a8d442e093c3f3dc33123fa3ecbe6dece",tooltip="Load a 32-bit float texel from a data array."];
  Node219 -> Node228 [id="edge157_Node000219_Node000228",color="steelblue1",style="solid",tooltip=" "];
  Node228 [id="Node000228",label="load_texel_u8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__image_8cpp.html#a3308fe6e3772f49620b4b20258e7a28c",tooltip="Load a 8-bit UNORM texel from a data array."];
  Node219 -> Node11 [id="edge158_Node000219_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node60 [id="edge159_Node000219_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node12 [id="edge160_Node000219_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node23 [id="edge161_Node000219_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node51 [id="edge162_Node000219_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="vfloat4::swz",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structvfloat4.html#a0a3e390831722cc8e54f29155699f3a5",tooltip="Return a swizzled float 2."];
  Node51 -> Node32 [id="edge163_Node000051_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node219 -> Node26 [id="edge164_Node000219_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node231 [id="edge165_Node000005_Node000231",color="steelblue1",style="solid",tooltip=" "];
  Node231 [id="Node000231",label="load_image_block_fast_ldr",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__image_8cpp.html#a04e3f01eb10a8a494e1d07b39c496bde",tooltip="Load a single image block from the input image."];
  Node231 -> Node8 [id="edge166_Node000231_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node32 [id="edge167_Node000231_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node11 [id="edge168_Node000231_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node60 [id="edge169_Node000231_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node12 [id="edge170_Node000231_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node51 [id="edge171_Node000231_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node231 -> Node26 [id="edge172_Node000231_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node60 [id="edge173_Node000005_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node26 [id="edge174_Node000005_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node232 [id="edge175_Node000002_Node000232",color="steelblue1",style="solid",tooltip=" "];
  Node232 [id="Node000232",label="compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#abb4b489d57171cfb1ebe0be7d24ef1d9",tooltip="Compute regional averages in an image."];
  Node232 -> Node6 [id="edge176_Node000232_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node232 -> Node233 [id="edge177_Node000232_Node000233",color="steelblue1",style="solid",tooltip=" "];
  Node233 [id="Node000233",label="compute_pixel_region\l_variance",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__compute__variance_8cpp.html#a8cd8e456dcff495dba9b6666be024007",tooltip="Compute averages for a pixel region."];
  Node233 -> Node224 [id="edge178_Node000233_Node000224",color="steelblue1",style="solid",tooltip=" "];
  Node233 -> Node26 [id="edge179_Node000233_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node232 -> Node217 [id="edge180_Node000232_Node000217",color="steelblue1",style="solid",tooltip=" "];
  Node232 -> Node60 [id="edge181_Node000232_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node218 [id="edge182_Node000002_Node000218",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node235 [id="edge183_Node000002_Node000235",color="steelblue1",style="solid",tooltip=" "];
  Node235 [id="Node000235",label="init_compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compute__variance_8cpp.html#a3f9cb247b3a6133147c430dfd81b3d96",tooltip="Setup computation of regional averages in an image."];
  Node235 -> Node60 [id="edge184_Node000235_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node236 [id="edge185_Node000002_Node000236",color="steelblue1",style="solid",tooltip=" "];
  Node236 [id="Node000236",label="ParallelManager::term",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#aa4855579e8b5efa4190e1f30db498300",tooltip="Trigger the pipeline stage term step."];
  Node2 -> Node237 [id="edge186_Node000002_Node000237",color="steelblue1",style="solid",tooltip=" "];
  Node237 [id="Node000237",label="validate_compression\l_swizzle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a6cf3c861fc7e2dcc766b5a18bc84c2de",tooltip="Validate overall compression swizzle."];
  Node237 -> Node238 [id="edge187_Node000237_Node000238",color="steelblue1",style="solid",tooltip=" "];
  Node238 [id="Node000238",label="validate_compression_swz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a0ada8b63b230be4c664f4b4223c787bc",tooltip="Validate single channel compression swizzle."];
  Node2 -> Node239 [id="edge188_Node000002_Node000239",color="steelblue1",style="solid",tooltip=" "];
  Node239 [id="Node000239",label="ParallelManager::wait",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#afdfb2d5fce334f335edb01c8106e784c",tooltip="Wait for stage processing to complete."];
}
