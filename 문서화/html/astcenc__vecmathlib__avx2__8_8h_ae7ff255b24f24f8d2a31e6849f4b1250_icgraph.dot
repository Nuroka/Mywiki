digraph "hmin"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="hmin",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Return the horizontal minimum of a vector."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="compute_ideal_endpoint\l_formats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a81c7b68e8c7b82a5ff718f21bd4f3c35",tooltip="Identify, for each mode, which set of color endpoint produces the best result."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="compress_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="astcenc_compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#ad762aa055eed75156c99309158a40e90",tooltip="Compress an image."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="astcenc_main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__entry_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627",tooltip=" "];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="compression_workload\l_runner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a57bafe66bbd689a53aad2d190fe7a3fa",tooltip="Runner callback function for a compression worker thread."];
  Node9 -> Node7 [id="edge9_Node000009_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node10 [id="edge10_Node000002_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node10 -> Node4 [id="edge11_Node000010_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="hmin_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ac4a641bfa34d9f961fddf927fbb939da",tooltip="Return the horizontal minimum of a vector."];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="hmin_rgb_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ac8652a0d90b3378db8fa8a8d2c4a434c",tooltip="Return the horizontal min of RGB vector lanes as a scalar."];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compute_color_error\l_for_every_integer_count\l_and_quant_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a163a7d0cf020b6f86049745807912ec1",tooltip="For a given partition compute the error for every endpoint integer count and quant level."];
  Node13 -> Node2 [id="edge15_Node000013_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge16_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="hmin_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5618d81f875c0158284ccc9923d83dab",tooltip="Return the horizontal minimum of a vector."];
  Node14 -> Node3 [id="edge17_Node000014_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node10 [id="edge18_Node000014_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node15 [id="edge19_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compute_error_squared_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac4a96475fb0074ef3fd0f08ea66de75e",tooltip="Compute the RGB error for uncorrelated and same chroma projections."];
  Node15 -> Node16 [id="edge20_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node16 -> Node4 [id="edge21_Node000016_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node17 [id="edge22_Node000014_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="compute_error_squared_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a2dec702033b002eaf4090eb47ce4ad21",tooltip="Compute the RGBA error for uncorrelated and same chroma projections."];
  Node17 -> Node16 [id="edge23_Node000017_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
