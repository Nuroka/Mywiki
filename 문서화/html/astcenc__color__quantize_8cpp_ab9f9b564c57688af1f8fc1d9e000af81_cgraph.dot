digraph "pack_color_endpoints"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="pack_color_endpoints",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Pack a single pair of color endpoints as effectively as possible."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae91c0bb0ebd82ed2a7fa7aa915f6e76e",tooltip="Return the clamped value between min and max."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="get_rgba_encoding_error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a7175b796b451809bf4d85bb291cb7bec",tooltip="Functions for color quantization."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="hadd_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aacd26478e4fe1f97a5d47e8adaacc898",tooltip="Return the horizontal sum of a vector."];
  Node6 -> Node6 [id="edge6_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node7 [id="edge7_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="int_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a3a2ce0fb403294db7fe126a6b3e87ab7",tooltip="Return a float value for an integer vector."];
  Node1 -> Node8 [id="edge8_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="vint4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a01e3f7debf73dc6c757fa36d585c9d17",tooltip="Get the scalar from a single lane."];
  Node1 -> Node9 [id="edge9_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="quantize_hdr_luminance\l_large_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ad5fb9a4bf5ae21916bc6c634c7f789f8",tooltip="Quantize a HDR L color using the large range encoding."];
  Node9 -> Node10 [id="edge10_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="astc::clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a8f8b2ad23b04a389f6785bc80b61349b",tooltip="Clamp a value value between mn and mx."];
  Node9 -> Node11 [id="edge11_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="astc::flt2int_rtn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a455f4a304ea7dcdd8fd0de030cbdbfb4",tooltip="SP float round-to-nearest and convert to integer."];
  Node9 -> Node12 [id="edge12_Node000009_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="hadd_rgb_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a48e833d0cfdf950b6bc3431fce00507e",tooltip="Return the horizontal sum of RGB vector lanes as a scalar."];
  Node12 -> Node8 [id="edge13_Node000012_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node13 [id="edge14_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="quant_color",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a0af2fba0ed6cbe9e279c808e540eb74e",tooltip="Determine the quantized value given a quantization level."];
  Node1 -> Node14 [id="edge15_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="quantize_hdr_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a018b17fdce9e0fb576249da80bfc90a2",tooltip="Quantize a HDR RGB color using direct RGB encoding."];
  Node14 -> Node15 [id="edge16_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="abs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aeac50750508168aeab5115733d3ee63c",tooltip="Return the absolute value of the float vector."];
  Node14 -> Node10 [id="edge17_Node000014_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node2 [id="edge18_Node000014_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node11 [id="edge19_Node000014_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node16 [id="edge20_Node000014_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="vfloat4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04462a7815432c6bc3ce1b5e5d11e4fc",tooltip="Get the scalar value of a single lane."];
  Node14 -> Node13 [id="edge21_Node000014_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node17 [id="edge22_Node000014_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="quantize_and_unquantize\l_retain_top_four_bits",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ab9e83c316e8b6c63580e0a17a9ddc857",tooltip="Quantize and unquantize a value ensuring top four bits are the same."];
  Node17 -> Node13 [id="edge23_Node000017_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node18 [id="edge24_Node000014_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="quantize_and_unquantize\l_retain_top_two_bits",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ae0e7daa2cc696baa52756e0c35d63138",tooltip="Quantize and unquantize a value ensuring top two bits are the same."];
  Node18 -> Node13 [id="edge25_Node000018_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node19 [id="edge26_Node000014_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="vfloat4::swz",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structvfloat4.html#a0a3e390831722cc8e54f29155699f3a5",tooltip="Return a swizzled float 2."];
  Node19 -> Node16 [id="edge27_Node000019_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge28_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="quantize_hdr_rgb_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a968dafc89b796ea5218a690b22c39911",tooltip="Quantize a HDR RGBA color using either delta or direct RGBA encoding."];
  Node21 -> Node16 [id="edge29_Node000021_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node22 [id="edge30_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="quantize_hdr_alpha",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a4c475fce8f14e7437cc348b0319a1365",tooltip="Quantize a HDR A color using either delta or direct RGBA encoding."];
  Node22 -> Node10 [id="edge31_Node000022_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node11 [id="edge32_Node000022_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node13 [id="edge33_Node000022_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node14 [id="edge34_Node000021_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge35_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="quantize_hdr_rgb_ldr\l_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#acc5fc16efff8422faf77e47bc55ab0ad",tooltip="Quantize a HDR RGB + LDR A color using direct RGBA encoding."];
  Node24 -> Node25 [id="edge36_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="astc::clamp255f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a1861708487807ec08c172e2f7ff58978",tooltip="Clamp a float value between 0.0f and 255.0f."];
  Node25 -> Node10 [id="edge37_Node000025_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node11 [id="edge38_Node000024_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node16 [id="edge39_Node000024_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node13 [id="edge40_Node000024_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node14 [id="edge41_Node000024_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node26 [id="edge42_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="quantize_hdr_rgbo",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a8c60d84b27b5bf6a95eafa1b86497235",tooltip="Quantize a HDR RGB color using RGB + offset."];
  Node26 -> Node10 [id="edge43_Node000026_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node2 [id="edge44_Node000026_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node11 [id="edge45_Node000026_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node16 [id="edge46_Node000026_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node17 [id="edge47_Node000026_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node18 [id="edge48_Node000026_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node27 [id="edge49_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="vfloat4::set_lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a2168231efa1e514fd41b3603e57be297",tooltip="Set the scalar value of a single lane."];
  Node26 -> Node19 [id="edge50_Node000026_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node28 [id="edge51_Node000001_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="quantize_luminance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ae9901a3923b424bef4509df064efd91e",tooltip="Quantize a LDR L color."];
  Node28 -> Node11 [id="edge52_Node000028_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node12 [id="edge53_Node000028_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node13 [id="edge54_Node000028_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge55_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="quantize_luminance\l_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a847eef8e87233ecad7a553dfa1dcd4d5",tooltip="Quantize a LDR LA color."];
  Node29 -> Node11 [id="edge56_Node000029_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node12 [id="edge57_Node000029_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node16 [id="edge58_Node000029_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node13 [id="edge59_Node000029_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge60_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="quantize_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#aad6197b2a3f7eb3048a81f24e5f9c7b3",tooltip="Quantize an LDR RGB color."];
  Node30 -> Node31 [id="edge61_Node000030_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="float_to_int_rtn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a598d6ea3ba27a788b12341a5263c7881",tooltip="Return a integer value for a float vector, using round-to-nearest."];
  Node30 -> Node12 [id="edge62_Node000030_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node3 [id="edge63_Node000030_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node4 [id="edge64_Node000030_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node32 [id="edge65_Node000030_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="quant_color3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#adae1b4db9a1942106e86b3f5ff358092",tooltip="Determine the quantized value given a quantization level."];
  Node32 -> Node8 [id="edge66_Node000032_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node33 [id="edge67_Node000001_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="quantize_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#aa1eba2920aec0d82d8b1f66ccd3a1044",tooltip="Quantize an LDR RGBA color."];
  Node33 -> Node11 [id="edge68_Node000033_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node16 [id="edge69_Node000033_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node13 [id="edge70_Node000033_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node30 [id="edge71_Node000033_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node34 [id="edge72_Node000033_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="vint4::set_lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a1e438bb142ad09e372b0834acd0c0b68",tooltip="Set the scalar value of a single lane."];
  Node1 -> Node35 [id="edge73_Node000001_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="quantize_rgbs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a9a0a7e003d1ea68f9b48c28e406ad1ad",tooltip="Quantize an LDR RGB color using scale encoding."];
  Node35 -> Node10 [id="edge74_Node000035_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node36 [id="edge75_Node000035_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="astc::clamp1f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#ac60307af42a98d70a956170894e29e9e",tooltip="Clamp a float value between 0.0f and 1.0f."];
  Node36 -> Node10 [id="edge76_Node000036_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node25 [id="edge77_Node000035_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node11 [id="edge78_Node000035_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node12 [id="edge79_Node000035_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node16 [id="edge80_Node000035_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node13 [id="edge81_Node000035_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node37 [id="edge82_Node000001_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="quantize_rgbs_alpha",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a2d4a8db93c0ebf03b3b6dc23b292428f",tooltip="Quantize an LDR RGBA color using scale encoding."];
  Node37 -> Node11 [id="edge83_Node000037_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node16 [id="edge84_Node000037_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node13 [id="edge85_Node000037_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node35 [id="edge86_Node000037_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node38 [id="edge87_Node000001_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="rgba_delta_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#abb9e5b31fe822e7e3ab0757f1989a321",tooltip="Unpack an LDR RGBA color that uses delta encoding."];
  Node38 -> Node39 [id="edge88_Node000038_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="bit_transfer_signed",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#acaab0374259bd298c1282e6a0b84bc8f",tooltip="Apply signed bit transfer."];
  Node39 -> Node40 [id="edge89_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="lsr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0a3a7d755cec1c73d0ce9c50b33bc207",tooltip="Logical shift right."];
  Node38 -> Node2 [id="edge90_Node000038_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node12 [id="edge91_Node000038_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node44 [id="edge92_Node000038_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="uncontract_color",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__unquantize_8cpp.html#a604a48c74e6d1c8476146b0955331344",tooltip="Functions for color unquantization."];
  Node44 -> Node8 [id="edge93_Node000044_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node46 [id="edge94_Node000001_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="rgba_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#aa8f902332b94b93405c7496b1b3838ba",tooltip="Unpack an LDR RGBA color that uses direct encoding."];
  Node46 -> Node12 [id="edge95_Node000046_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node46 -> Node44 [id="edge96_Node000046_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node47 [id="edge97_Node000001_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="try_quantize_hdr_luminance\l_small_range",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a105c509260a154870ee3d34d1a336c60",tooltip="Quantize a HDR L color using the small range encoding."];
  Node47 -> Node10 [id="edge98_Node000047_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node11 [id="edge99_Node000047_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node12 [id="edge100_Node000047_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node47 -> Node13 [id="edge101_Node000047_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge102_Node000001_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="try_quantize_luminance\l_alpha_delta",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a54914cb063a3e14eaef9d6432ed792d6",tooltip="Try to quantize an LDR LA color using delta encoding."];
  Node48 -> Node11 [id="edge103_Node000048_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node12 [id="edge104_Node000048_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node16 [id="edge105_Node000048_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node13 [id="edge106_Node000048_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node49 [id="edge107_Node000001_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="try_quantize_rgb_blue\l_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#a1a4ffac105268d9e7ac1058b1b2ad542",tooltip="Try to quantize an LDR RGB color using blue-contraction."];
  Node49 -> Node50 [id="edge108_Node000049_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="any",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a1fcb81537a701f246e75fa622c2dd8ee",tooltip="True if any lanes are enabled, false otherwise."];
  Node49 -> Node31 [id="edge109_Node000049_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node12 [id="edge110_Node000049_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node32 [id="edge111_Node000049_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node19 [id="edge112_Node000049_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node51 [id="edge113_Node000001_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="try_quantize_rgb_delta",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a6b7ee442b1e9da4ac693000c4f805c7b",tooltip="Try to quantize an LDR RGB color using delta encoding."];
  Node51 -> Node50 [id="edge114_Node000051_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node39 [id="edge115_Node000051_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node31 [id="edge116_Node000051_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node12 [id="edge117_Node000051_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node52 [id="edge118_Node000051_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="lsl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a86240f0fb5745ded88afe10d524c960f",tooltip="Logical shift left."];
  Node51 -> Node40 [id="edge119_Node000051_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node32 [id="edge120_Node000051_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node27 [id="edge121_Node000051_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node34 [id="edge122_Node000051_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node53 [id="edge123_Node000001_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="try_quantize_rgb_delta\l_blue_contract",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#aedceeace1416ce23b9a934ce87f96c3c",tooltip="Try to quantize an LDR RGB color using delta encoding and blue-contraction."];
  Node53 -> Node50 [id="edge124_Node000053_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node39 [id="edge125_Node000053_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node31 [id="edge126_Node000053_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node12 [id="edge127_Node000053_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node52 [id="edge128_Node000053_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node40 [id="edge129_Node000053_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node32 [id="edge130_Node000053_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node27 [id="edge131_Node000053_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node34 [id="edge132_Node000053_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node19 [id="edge133_Node000053_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node54 [id="edge134_Node000001_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="try_quantize_rgba_blue\l_contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__quantize_8cpp.html#ab09b68ff45a1b287f05fd2428805bbc9",tooltip="Try to quantize an LDR RGBA color using blue-contraction."];
  Node54 -> Node11 [id="edge135_Node000054_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node16 [id="edge136_Node000054_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node13 [id="edge137_Node000054_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node34 [id="edge138_Node000054_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node49 [id="edge139_Node000054_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node55 [id="edge140_Node000001_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="try_quantize_rgba_delta",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#af4d400b2fd9235d069b8e71966cb1246",tooltip="Try to quantize an LDR RGBA color using delta encoding."];
  Node55 -> Node51 [id="edge141_Node000055_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node57 [id="edge142_Node000001_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="try_quantize_rgba_delta\l_blue_contract",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__quantize_8cpp.html#a6e41c12d083ec9f3d9028ea35f13f18f",tooltip="Try to quantize an LDR RGBA color using delta and blue contract encoding."];
  Node57 -> Node53 [id="edge143_Node000057_Node000053",color="steelblue1",style="solid",tooltip=" "];
}
