digraph "astc::min"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="astc::min",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Return the minimum of two values."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="astcenc_config_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#a061172f7c266a9f5a3270e0b76a65433",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="init_astcenc_config",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#aaf7c065e8caf5efb3235ae521742312a",tooltip="Initialize the astcenc_config"];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="astcenc_main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a073d18880f24fd648661b01d2e20340e",tooltip="Application entry point."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="main",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__entry_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627",tooltip=" "];
  Node1 -> Node4 [id="edge5_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="compress_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a579b9a2ceeecda2fb3abe63b8311df1c",tooltip="Compress an image block into a physical block."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#acbecfd32ce013d567cac16a877c20f42",tooltip="Compress an image, after any preflight has completed."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="astcenc_compress_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#ad762aa055eed75156c99309158a40e90",tooltip="Compress an image."];
  Node8 -> Node4 [id="edge9_Node000008_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge10_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="compression_workload\l_runner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a57bafe66bbd689a53aad2d190fe7a3fa",tooltip="Runner callback function for a compression worker thread."];
  Node9 -> Node4 [id="edge11_Node000009_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node7 [id="edge12_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge13_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="compress_symbolic_block\l_for_partition_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af5f518a15600c71922e69267dea2db99",tooltip="Compress a block using a chosen partitioning and 1 plane of weights."];
  Node10 -> Node6 [id="edge14_Node000010_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge15_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="compress_symbolic_block\l_for_partition_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#af11a976c8ea386db054bef472ce0667c",tooltip="Compress a block using a chosen partitioning and 2 planes of weights."];
  Node11 -> Node6 [id="edge16_Node000011_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge17_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__entry_8cpp.html#abb4b489d57171cfb1ebe0be7d24ef1d9",tooltip="Compute regional averages in an image."];
  Node12 -> Node8 [id="edge18_Node000012_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node13 [id="edge19_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="compute_error_metrics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__error__metrics_8cpp.html#a478be461420681d7c83aa89569ea92c4",tooltip="Compute error metrics comparing two images."];
  Node13 -> Node4 [id="edge20_Node000013_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge21_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="compute_ideal_colors\l_and_weights_1_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a3e9812129972c73914841ecc0f6a7e71",tooltip="Compute the ideal endpoints and weights for 1 color component."];
  Node14 -> Node15 [id="edge22_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compute_ideal_colors\l_and_weights_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a52d3985007cfc83025661e0347bc00cc",tooltip="Compute ideal endpoint colors and weights for 2 planes of weights."];
  Node15 -> Node11 [id="edge23_Node000015_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge24_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="compute_ideal_colors\l_and_weights_2_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#ad96c399a873ddd142d4779b6aeb74b87",tooltip="Compute the ideal endpoints and weights for 2 color components."];
  Node16 -> Node15 [id="edge25_Node000016_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge26_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="compute_ideal_colors\l_and_weights_3_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a7ec20ff2556f6357cc0754c13e841262",tooltip="Compute the ideal endpoints and weights for 3 color components."];
  Node17 -> Node18 [id="edge27_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="compute_ideal_colors\l_and_weights_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afa8cab65d4b6f0cbece52eec38aed523",tooltip="Compute ideal endpoint colors and weights for 1 plane of weights."];
  Node18 -> Node10 [id="edge28_Node000018_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node15 [id="edge29_Node000017_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node19 [id="edge30_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="compute_ideal_colors\l_and_weights_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a08aebec57ada3441207dce6a7a02797e",tooltip="Compute the ideal endpoints and weights for 4 color components."];
  Node19 -> Node18 [id="edge31_Node000019_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge32_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="compute_kmeans_partition\l_ordering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a89e88da4b6a389046d10b859ba68a118",tooltip="Use k-means clustering to compute a partition ordering for a block.."];
  Node20 -> Node21 [id="edge33_Node000020_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a7577b3047a3f9f0fe44fd579f5450630",tooltip="Find the best set of partitions to trial for a given block."];
  Node21 -> Node6 [id="edge34_Node000021_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge35_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge36_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="four_partitions_find\l_best_combination_for\l_every_quantization_and\l_integer_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a806d3ce88e28226224c6b929b69f2fda",tooltip="For 4 partitions compute the best format combinations for every pair of quant mode and integer count."];
  Node22 -> Node23 [id="edge37_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="compute_ideal_endpoint\l_formats",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#a81c7b68e8c7b82a5ff718f21bd4f3c35",tooltip="Identify, for each mode, which set of color endpoint produces the best result."];
  Node23 -> Node10 [id="edge38_Node000023_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 -> Node11 [id="edge39_Node000023_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge40_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="generate_one_partition\l_info_entry",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__partition__tables_8cpp.html#a11a5380f66eb5461273c7d4f5c71e6d0",tooltip="Generate a single partition info structure."];
  Node24 -> Node25 [id="edge41_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="build_partition_table\l_for_one_partition_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__partition__tables_8cpp.html#a83b39a9f5b84470876611393553d38b5",tooltip=" "];
  Node25 -> Node26 [id="edge42_Node000025_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="init_partition_tables",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__partition__tables_8cpp.html#a9460ca3acf0175a93580b78d5d99a36a",tooltip="Populate the partition tables for the target block size."];
  Node26 -> Node27 [id="edge43_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="init_block_size_descriptor",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__block__sizes_8cpp.html#a5c46863585cc583c3deb49323dfb73d8",tooltip="Populate the block size descriptor for the target block size."];
  Node24 -> Node26 [id="edge44_Node000024_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge45_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="ParallelManager::get\l_task_assignment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_parallel_manager.html#ae0bb955f3fa52427590633355f0da01c",tooltip="Request a task assignment."];
  Node29 -> Node30 [id="edge46_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="astcenc_decompress\l_image",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__entry_8cpp.html#a062987fc41b9df7d34d8eb668f29eb21",tooltip="Decompress an image."];
  Node30 -> Node4 [id="edge47_Node000030_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node7 [id="edge48_Node000029_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node12 [id="edge49_Node000029_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node32 [id="edge50_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="init_compute_averages",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compute__variance_8cpp.html#a3f9cb247b3a6133147c430dfd81b3d96",tooltip="Setup computation of regional averages in an image."];
  Node32 -> Node8 [id="edge51_Node000032_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node33 [id="edge52_Node000001_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="kmeans_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#acfcac2ef43cb03621ea25d3f6673c19e",tooltip="Functions for finding best partition for a block."];
  Node33 -> Node20 [id="edge53_Node000033_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node34 [id="edge54_Node000001_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="load_image_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#ac38601dc2481e26c57906255523f7262",tooltip="Load a single image block from the input image."];
  Node34 -> Node7 [id="edge55_Node000034_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node35 [id="edge56_Node000001_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="load_image_block_fast_ldr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a04e3f01eb10a8a494e1d07b39c496bde",tooltip="Load a single image block from the input image."];
  Node35 -> Node7 [id="edge57_Node000035_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node36 [id="edge58_Node000001_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="luminance_delta_unpack",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__color__unquantize_8cpp.html#aef3d7e05db47fe6589797a1abde0ece1",tooltip="Unpack an LDR L color that uses delta encoding."];
  Node36 -> Node37 [id="edge59_Node000036_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="unpack_color_endpoints",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__color__unquantize_8cpp.html#ab9b659180fb522b05391892336dbc095",tooltip="Unpack a single pair of encoded endpoints."];
  Node1 -> Node47 [id="edge60_Node000001_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="astc::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#ae6a0e03e6d3d62f82091604290a5a2fe",tooltip="Return the minimum of three values."];
  Node1 -> Node48 [id="edge61_Node000001_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="astc::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#affe4def63b7037742cee70bb11201fbd",tooltip="Return the minimum of four values."];
  Node1 -> Node49 [id="edge62_Node000001_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="partition_mismatch2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a6c9cd07ba65d36a11ebdd0363f3a3550",tooltip="Compute bit-mismatch for partitioning in 2-partition mode."];
  Node49 -> Node50 [id="edge63_Node000049_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="count_partition_mismatch_bits",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a4567304c86889e62a6cf2b5a391d6260",tooltip="Count the partition table mismatches vs the data clustering."];
  Node50 -> Node20 [id="edge64_Node000050_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node51 [id="edge65_Node000001_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="partition_mismatch3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a9acad2d527657aaa0da1c424db437e37",tooltip="Compute bit-mismatch for partitioning in 3-partition mode."];
  Node51 -> Node50 [id="edge66_Node000051_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node52 [id="edge67_Node000001_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="partition_mismatch4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a3febec3fce459c429e5c4445c852d3bb",tooltip="Compute bit-mismatch for partitioning in 4-partition mode."];
  Node52 -> Node50 [id="edge68_Node000052_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node53 [id="edge69_Node000001_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="prepare_block_statistics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__compress__symbolic_8cpp.html#a6ac5bc5977155d0c8433492cd1985ce6",tooltip="Determine the lowest cross-channel correlation factor."];
  Node53 -> Node6 [id="edge70_Node000053_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node39 [id="edge71_Node000001_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="print_diagnostic_image",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#ac1760850c83dafab500f7cf8ab789246",tooltip="Populate a single diagnostic image showing aspects of the encoding."];
  Node39 -> Node40 [id="edge72_Node000039_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="print_diagnostic_images",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenccli__toplevel_8cpp.html#a65c87ee1ff0ed0736cffa06692853479",tooltip="Print a set of diagnostic images showing aspects of the encoding."];
  Node40 -> Node4 [id="edge73_Node000040_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node54 [id="edge74_Node000001_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="recompute_ideal_colors\l_1plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#a02bcad94240678ee727ccf2f0fbfb5d3",tooltip="For a given 1 plane weight set recompute the endpoint colors."];
  Node54 -> Node10 [id="edge75_Node000054_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node55 [id="edge76_Node000001_Node000055",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="recompute_ideal_colors\l_2planes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__ideal__endpoints__and__weights_8cpp.html#afb3c455470bef24f48d7815bb78bb569",tooltip="For a given 2 plane weight set recompute the endpoint colors."];
  Node55 -> Node11 [id="edge77_Node000055_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node56 [id="edge78_Node000001_Node000056",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="store_image_block",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__image_8cpp.html#a987bc85f97f6168e6c99aa60879622f5",tooltip="Store a single image block to the output image."];
  Node56 -> Node30 [id="edge79_Node000056_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node57 [id="edge80_Node000001_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="symbolic_to_physical",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__symbolic__physical_8cpp.html#af7b1f1696c0ee5cbfd6f2546fa400011",tooltip="Convert a symbolic representation into a binary physical encoding."];
  Node57 -> Node6 [id="edge81_Node000057_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node58 [id="edge82_Node000001_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="three_partitions_find\l_best_combination_for\l_every_quantization_and\l_integer_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#ab08ff5ed53a05a876dc8e90c05aeef72",tooltip="For 3 partitions compute the best format combinations for every pair of quant mode and integer count."];
  Node58 -> Node23 [id="edge83_Node000058_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node59 [id="edge84_Node000001_Node000059",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="two_partitions_find\l_best_combination_for\l_every_quantization_and\l_integer_count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__pick__best__endpoint__format_8cpp.html#ac317754d4bbd795d6f29b331883e8eb3",tooltip="For 2 partitions compute the best format combinations for every pair of quant mode and integer count."];
  Node59 -> Node23 [id="edge85_Node000059_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
