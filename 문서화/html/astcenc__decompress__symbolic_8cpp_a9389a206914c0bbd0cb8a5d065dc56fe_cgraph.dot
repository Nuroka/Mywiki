digraph "decode_texel"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="decode_texel",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Convert integer color value into a float value for the decoder."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="all",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad93dff3341cbbeed568d4bd6dc4ef87c",tooltip="True if all lanes are enabled, false otherwise."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad922a3ed6098767968916265154b6f82",tooltip="Return a 8-bit mask code indicating mask status."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="any",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a1fcb81537a701f246e75fa622c2dd8ee",tooltip="True if any lanes are enabled, false otherwise."];
  Node4 -> Node3 [id="edge4_Node000004_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge5_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="float16_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__neon__4_8h.html#afd7aa2069bdf377067c3abaca1256432",tooltip="Return a float value for a float16 vector."];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="lns_to_sf16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#aa1ab2044e5354115ee71324e30fba1ed",tooltip="Convert 16-bit LNS to float16."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="lsl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a86240f0fb5745ded88afe10d524c960f",tooltip="Logical shift left."];
  Node6 -> Node8 [id="edge8_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="lsr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0a3a7d755cec1c73d0ce9c50b33bc207",tooltip="Logical shift right."];
  Node6 -> Node9 [id="edge9_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node6 -> Node10 [id="edge10_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="unorm16_to_sf16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a478b1f2bc7a3589bfbe32b398583c502",tooltip="Convert unorm16 [0, 65535] to float16 in range [0, 1]."];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="clamp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae91c0bb0ebd82ed2a7fa7aa915f6e76e",tooltip="Return the clamped value between min and max."];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node12 -> Node9 [id="edge15_Node000012_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node14 [id="edge16_Node000011_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="clz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#ac4a249bd7ee357fb775d7f8ad8e22d91",tooltip="Count the leading zeros for each lane in a."];
  Node14 -> Node12 [id="edge17_Node000014_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node15 [id="edge18_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="float_as_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5c2db475754d8da42d9b685a45c48ab8",tooltip="Return a float value as an integer bit pattern (i.e. no conversion)."];
  Node14 -> Node16 [id="edge19_Node000014_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="int_to_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a3a2ce0fb403294db7fe126a6b3e87ab7",tooltip="Return a float value for an integer vector."];
  Node14 -> Node8 [id="edge20_Node000014_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node15 [id="edge21_Node000011_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node16 [id="edge22_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node7 [id="edge23_Node000011_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node8 [id="edge24_Node000011_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node10 [id="edge25_Node000011_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node17 [id="edge26_Node000011_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="two_to_the_n",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a0f5f1db8eeb374db2ffdaca1d0027aa0",tooltip="Return lanewise 2^a for each lane in a."];
  Node17 -> Node2 [id="edge27_Node000017_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node18 [id="edge28_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="float_to_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#afdaab5e0b4a39a5dd28fb5b40642e57d",tooltip="Return a integer value for a float vector, using truncation."];
  Node17 -> Node19 [id="edge29_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="int_as_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ac584d4929db078403c58549bafd3c1cd",tooltip="Return a integer value as a float bit pattern (i.e. no conversion)."];
  Node17 -> Node7 [id="edge30_Node000017_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge31_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="vint4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a9dfa1c40a3c4dbc0858567dc629a80b8",tooltip="Factory that returns a vector of zeros."];
  Node20 -> Node21 [id="edge32_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="vint4::vint4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint4.html#a3315184e8bb4f0cf1ca8dcff1f57cdae",tooltip="Construct from zero-initialized value."];
}
