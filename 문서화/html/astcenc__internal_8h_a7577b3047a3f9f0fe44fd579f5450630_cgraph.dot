digraph "find_best_partition_candidates"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="find_best_partition\l_candidates",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Find the best set of partitions to trial for a given block."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="compute_avgs_and_dirs\l_3_comp_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a73936e5cf41b74f2b8d9b137a9d64253",tooltip="Compute averages and dominant directions for each partition in a 3 component texture."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compute_partition_averages_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac5429bc77cf39a7dba332af8fb14e093",tooltip="Functions for finding dominant direction of a set of colors."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="haccumulate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aaa291a197219a09a2e1103aec6945b3c",tooltip="Accumulate lane-wise sums for a vector, folded 4-wide."];
  Node4 -> Node4 [id="edge4_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge5_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="hadd_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aacd26478e4fe1f97a5d47e8adaacc898",tooltip="Return the horizontal sum of a vector."];
  Node5 -> Node5 [id="edge6_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node6 [id="edge7_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="vint4::lane_id",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structvint4.html#a21e3d111e37da1aaaeb5ba21a831c863",tooltip="Factory that returns a vector containing the lane IDs."];
  Node3 -> Node8 [id="edge8_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="vfloat4::swz",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a0a3e390831722cc8e54f29155699f3a5",tooltip="Return a swizzled float 2."];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="vfloat4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04462a7815432c6bc3ce1b5e5d11e4fc",tooltip="Get the scalar value of a single lane."];
  Node8 -> Node10 [id="edge10_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="vfloat4::vfloat4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a9df51cb30b68d6d51ca607e64aa1ebf0",tooltip="Construct from zero-initialized value."];
  Node3 -> Node11 [id="edge11_Node000003_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="vfloat3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a1a2e12d78738b0b4b550f57b2dc05f07",tooltip="Factory that returns a 3 component vfloat4."];
  Node2 -> Node12 [id="edge12_Node000002_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="dot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a6d7561f8f0ebee752b0e217101d9d5f3",tooltip="Return the dot product for the full 4 lanes, returning vector."];
  Node12 -> Node5 [id="edge13_Node000012_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node13 [id="edge14_Node000002_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad922a3ed6098767968916265154b6f82",tooltip="Return a 8-bit mask code indicating mask status."];
  Node2 -> Node14 [id="edge15_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node2 -> Node8 [id="edge16_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node15 [id="edge17_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="image_block::texel3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structimage__block.html#a682b1ada02acb8369d6f6f30378b260e",tooltip="Get an RGB texel value from the data."];
  Node15 -> Node11 [id="edge18_Node000015_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge19_Node000002_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="vfloat4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node16 -> Node10 [id="edge20_Node000016_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge21_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="compute_avgs_and_dirs\l_4_comp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a00407861c2f0e767b64b1cb1bb7a27b6",tooltip="Compute averages and dominant directions for each partition in a 4 component texture."];
  Node17 -> Node18 [id="edge22_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="compute_partition_averages_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a83cf48552a7e8225358c7c43df24fd96",tooltip="Compute the average RGBA color of each partition."];
  Node18 -> Node4 [id="edge23_Node000018_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node5 [id="edge24_Node000018_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node6 [id="edge25_Node000018_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node12 [id="edge26_Node000017_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node13 [id="edge27_Node000017_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node14 [id="edge28_Node000017_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node8 [id="edge29_Node000017_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node19 [id="edge30_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="image_block::texel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structimage__block.html#af99de7d75e1e380b31d70d131509caa9",tooltip="Get an RGBA texel value from the data."];
  Node17 -> Node16 [id="edge31_Node000017_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge32_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="compute_error_squared_rgb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#ac4a96475fb0074ef3fd0f08ea66de75e",tooltip="Compute the RGB error for uncorrelated and same chroma projections."];
  Node20 -> Node21 [id="edge33_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="all",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad93dff3341cbbeed568d4bd6dc4ef87c",tooltip="True if all lanes are enabled, false otherwise."];
  Node21 -> Node13 [id="edge34_Node000021_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node22 [id="edge35_Node000020_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="gatherf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aae2f99eb48f3cde0f4739b894e8ca29f",tooltip="Load a vector of gathered results from an array;"];
  Node20 -> Node4 [id="edge36_Node000020_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node5 [id="edge37_Node000020_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node23 [id="edge38_Node000020_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="hmax_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5d1b09f64af83d5171e4b9580f62ac71",tooltip="Return the horizontal maximum of a vector."];
  Node23 -> Node24 [id="edge39_Node000023_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="hmax",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a516a2f0d872381b8c7c047845a90c9a3",tooltip="Return the horizontal maximum of a vector."];
  Node23 -> Node25 [id="edge40_Node000023_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="vint8::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvint8.html#a2e1f0c785f4899e1b7912f2580b9f77c",tooltip="Get the scalar from a single lane."];
  Node20 -> Node26 [id="edge41_Node000020_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="hmin_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5618d81f875c0158284ccc9923d83dab",tooltip="Return the horizontal minimum of a vector."];
  Node26 -> Node27 [id="edge42_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="hmin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ae7ff255b24f24f8d2a31e6849f4b1250",tooltip="Return the horizontal minimum of a vector."];
  Node26 -> Node25 [id="edge43_Node000026_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node9 [id="edge44_Node000020_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node6 [id="edge45_Node000020_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node13 [id="edge46_Node000020_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node28 [id="edge47_Node000020_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="astc::max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a83a55552d03399cdff6cf2fed8312c9f",tooltip="Return the maximum of two values."];
  Node20 -> Node29 [id="edge48_Node000020_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node20 -> Node30 [id="edge49_Node000020_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node20 -> Node16 [id="edge50_Node000020_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge51_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="compute_error_squared_rgba",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__averages__and__directions_8cpp.html#a2dec702033b002eaf4090eb47ce4ad21",tooltip="Compute the RGBA error for uncorrelated and same chroma projections."];
  Node31 -> Node21 [id="edge52_Node000031_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node22 [id="edge53_Node000031_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node4 [id="edge54_Node000031_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node5 [id="edge55_Node000031_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node23 [id="edge56_Node000031_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node26 [id="edge57_Node000031_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node9 [id="edge58_Node000031_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node6 [id="edge59_Node000031_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node13 [id="edge60_Node000031_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node28 [id="edge61_Node000031_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node29 [id="edge62_Node000031_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node30 [id="edge63_Node000031_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node16 [id="edge64_Node000031_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node32 [id="edge65_Node000001_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="compute_kmeans_partition\l_ordering",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a89e88da4b6a389046d10b859ba68a118",tooltip="Use k-means clustering to compute a partition ordering for a block.."];
  Node32 -> Node33 [id="edge66_Node000032_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="count_partition_mismatch_bits",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a4567304c86889e62a6cf2b5a391d6260",tooltip="Count the partition table mismatches vs the data clustering."];
  Node32 -> Node39 [id="edge67_Node000032_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="get_partition_ordering\l_by_mismatch_bits",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#ad1670adef9a30320320aeb3fa51bb7dc",tooltip="Use counting sort on the mismatch array to sort partition candidates."];
  Node32 -> Node40 [id="edge68_Node000032_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="kmeans_assign",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a48c3e037a653156f4c4d4643f267ba3f",tooltip="Assign texels to clusters, based on a set of chosen center points."];
  Node40 -> Node41 [id="edge69_Node000040_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="dot_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a53a7d8285fd42b50cf3600a004db34ac",tooltip="Return the dot product for the full 4 lanes, returning scalar."];
  Node41 -> Node5 [id="edge70_Node000041_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node19 [id="edge71_Node000040_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node42 [id="edge72_Node000032_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="kmeans_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#acfcac2ef43cb03621ea25d3f6673c19e",tooltip="Functions for finding best partition for a block."];
  Node42 -> Node41 [id="edge73_Node000042_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node35 [id="edge74_Node000042_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="astc::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#af78c0d31374aa9923633a3a2abf8d738",tooltip="Return the minimum of two values."];
  Node42 -> Node19 [id="edge75_Node000042_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node43 [id="edge76_Node000032_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="kmeans_update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#acf130a5dab418b762b9ad6d2db920c9f",tooltip="Compute new cluster centers based on their center of gravity."];
  Node43 -> Node19 [id="edge77_Node000043_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node43 -> Node16 [id="edge78_Node000043_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node35 [id="edge79_Node000032_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge80_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node44 [id="edge81_Node000001_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="dot3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#ae36c7167bc89ff2bf984c1a912526dcb",tooltip="Return the dot product for the bottom 3 lanes, returning vector."];
  Node44 -> Node45 [id="edge82_Node000044_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="hadd_rgb_s",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a48e833d0cfdf950b6bc3431fce00507e",tooltip="Return the horizontal sum of RGB vector lanes as a scalar."];
  Node1 -> Node47 [id="edge83_Node000001_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="dot3_s",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__common__4_8h.html#a377cafdb98d3ee38a2999ed00504f477",tooltip="Return the dot product for the bottom 3 lanes, returning scalar."];
  Node47 -> Node45 [id="edge84_Node000047_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node41 [id="edge85_Node000001_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge86_Node000001_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="block_size_descriptor\l::get_raw_partition_info",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structblock__size__descriptor.html#a551741bf3178a4b4617b2389c27345ec",tooltip="Get the partition info structure for a given partition count and seed."];
  Node48 -> Node49 [id="edge87_Node000048_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="block_size_descriptor\l::get_partition_table",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structblock__size__descriptor.html#a6d0c429d925ab011c22ab28b5807c368",tooltip="Get the partition info table for a given partition count."];
  Node1 -> Node50 [id="edge88_Node000001_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="insert_result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__find__best__partitioning_8cpp.html#a8d4cb4068f0c27419e45878261806cac",tooltip="Insert a partitioning into an order list of results, sorted by error."];
  Node1 -> Node51 [id="edge89_Node000001_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="image_block::is_constant\l_channel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structimage__block.html#ae3c0735355d378591db6cb7a011e381a",tooltip="Test if a single color channel is constant across the block."];
  Node51 -> Node52 [id="edge90_Node000051_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="any",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a1fcb81537a701f246e75fa622c2dd8ee",tooltip="True if any lanes are enabled, false otherwise."];
  Node52 -> Node13 [id="edge91_Node000052_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node51 -> Node6 [id="edge92_Node000051_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node35 [id="edge93_Node000001_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node53 [id="edge94_Node000001_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="normalize_safe",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a3b0e8ae23a514219217b72164a7909a4",tooltip="Normalize a vector, returning safe if len is zero."];
  Node53 -> Node12 [id="edge95_Node000053_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node9 [id="edge96_Node000053_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node54 [id="edge97_Node000053_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="sqrt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a46b31b19ff13c14adb023db4b5df8e52",tooltip="Return the sqrt of the lanes in the vector."];
  Node1 -> Node55 [id="edge98_Node000001_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="unit3",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a3cf3e0218d808e69f31668dbc458dc08",tooltip="Factory that returns a unit length 3 component vfloat4."];
  Node1 -> Node56 [id="edge99_Node000001_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="unit4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a5177e2c50f2c01a5610b2844ee3a071d",tooltip=" "];
  Node1 -> Node16 [id="edge100_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
}
