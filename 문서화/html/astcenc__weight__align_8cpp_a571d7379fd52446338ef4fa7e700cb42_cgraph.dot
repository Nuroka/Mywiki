digraph "compute_angular_endpoints_2planes"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="compute_angular_endpoints\l_2planes",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Compute the angular endpoints for two planes for each block mode."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="compute_angular_endpoints\l_for_quant_levels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a52f057b7da5fc35adac361b3696ac963",tooltip="The main function for the angular algorithm."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="compute_angular_offsets",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a54fb7b3aab0c6f60a65ce3dd07b088da",tooltip="Compute the angular alignment factors and offsets."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="atan2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a0d4a4b324b23d5b82c16b03e83a2d056",tooltip="Return fast, but approximate, vector atan2(x, y)."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="abs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aeac50750508168aeab5115733d3ee63c",tooltip="Return the absolute value of the float vector."];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="atan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#a57f123f6c9bc31cdb2da321b778954a2",tooltip="Return fast, but approximate, vector atan(x)."];
  Node6 -> Node5 [id="edge6_Node000006_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="change_sign",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib_8h.html#aa88e9d6b0f056012a4fc61c558f99c2e",tooltip="Return a with lanes negated if the b lane is negative."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="float_as_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a5c2db475754d8da42d9b685a45c48ab8",tooltip="Return a float value as an integer bit pattern (i.e. no conversion)."];
  Node7 -> Node9 [id="edge9_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="int_as_float",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ac584d4929db078403c58549bafd3c1cd",tooltip="Return a integer value as a float bit pattern (i.e. no conversion)."];
  Node6 -> Node10 [id="edge10_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="select",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a844ab5b69b84569f033be33bf5fb9fbc",tooltip="Return lanes from b if cond is set, else a."];
  Node4 -> Node7 [id="edge11_Node000004_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node8 [id="edge12_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node11 [id="edge13_Node000004_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="select_msb",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0c89452ffbab98a181c44460db41cae8",tooltip="Return lanes from b if MSB of cond is set, else a."];
  Node3 -> Node8 [id="edge14_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node12 [id="edge15_Node000003_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="storea",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad4c0a7bde35d6fe9c54531e1e0652f4a",tooltip="Store a vector to a 16B aligned memory address."];
  Node3 -> Node13 [id="edge16_Node000003_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="vfloat4::zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04b5f338012dab6be0b2bd7910fcbcae",tooltip="Factory that returns a vector of zeros."];
  Node13 -> Node14 [id="edge17_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="vfloat4::vfloat4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a9df51cb30b68d6d51ca607e64aa1ebf0",tooltip="Construct from zero-initialized value."];
  Node2 -> Node15 [id="edge18_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="compute_lowest_and\l_highest_weight",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__weight__align_8cpp.html#a32b24429143eb7c5b7050885943aad1b",tooltip="For a given step size compute the lowest and highest weight."];
  Node15 -> Node16 [id="edge19_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="float_to_int",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#afdaab5e0b4a39a5dd28fb5b40642e57d",tooltip="Return a integer value for a float vector, using truncation."];
  Node15 -> Node17 [id="edge20_Node000015_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="vfloat4::lane_id",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a13edfd5bac159c8a65e10a3bd9355b4d",tooltip="Factory that returns a vector containing the lane IDs."];
  Node17 -> Node14 [id="edge21_Node000017_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node18 [id="edge22_Node000015_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="mask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#ad922a3ed6098767968916265154b6f82",tooltip="Return a 8-bit mask code indicating mask status."];
  Node15 -> Node19 [id="edge23_Node000015_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#aa162915c044e97cc1f6d630338761fd3",tooltip="Return the max vector of two vectors."];
  Node15 -> Node20 [id="edge24_Node000015_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a165b3db4e7ced1551e1880a01a01150b",tooltip="Return the min vector of two vectors."];
  Node15 -> Node21 [id="edge25_Node000015_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="round",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$astcenc__vecmathlib__avx2__8_8h.html#a0cc9d8a88b3c39b3ea66e52d515ac661",tooltip="Return a float rounded to the nearest integer value."];
  Node15 -> Node10 [id="edge26_Node000015_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node12 [id="edge27_Node000015_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node13 [id="edge28_Node000015_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node22 [id="edge29_Node000002_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="vfloat4::lane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structvfloat4.html#a04462a7815432c6bc3ce1b5e5d11e4fc",tooltip="Get the scalar value of a single lane."];
  Node2 -> Node18 [id="edge30_Node000002_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node23 [id="edge31_Node000002_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="astc::max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceastc.html#a83a55552d03399cdff6cf2fed8312c9f",tooltip="Return the maximum of two values."];
  Node2 -> Node10 [id="edge32_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge33_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="block_size_descriptor\l::get_decimation_info",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structblock__size__descriptor.html#a688445f2f90b13188372d812baf8e02d",tooltip="Get the decimation info structure for index decimation_mode."];
  Node1 -> Node25 [id="edge34_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="decimation_mode::is\l_ref_2plane",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structdecimation__mode.html#aa2fe4a73b6781930c375b1810a03f73b",tooltip="Test if this mode is active below a given 2 plane weight quant (inclusive)."];
  Node25 -> Node18 [id="edge35_Node000025_Node000018",color="steelblue1",style="solid",tooltip=" "];
}
